*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="taskui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS buildexe AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRecompile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "buildexe"
	*</PropValue>

	ADD OBJECT 'chkRecompile' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Recompile all files", ;
		Left = 0, ;
		Name = "chkRecompile", ;
		Top = 50
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = "PJX", ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "Project", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 75, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 245, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		cextensions = "EXE", ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFile.Caption = "EXE to create", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 75, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 245, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings
		This.chkRecompile.ControlSource = 'This.Parent.oTask.lRecompile'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

	PROCEDURE oSource.LostFocus
		if not empty(This.Value) and empty(This.Parent.oTask.cTarget)
			This.Parent.oTask.cTarget = forceext(This.Value, 'exe')
			This.Parent.oTarget.Refresh()
		endif not empty(This.Value) ...
		
	ENDPROC

ENDDEFINE

DEFINE CLASS buildsetupinno AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oScriptFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "buildsetupinno"
	*</PropValue>

	ADD OBJECT 'oScriptFile' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cScriptFile, ;
		cextensions = "Inno Setup Script (*.iss):ISS", ;
		Left = 0, ;
		Name = "oScriptFile", ;
		Top = 0, ;
		lblFile.Caption = "Script file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 56, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 264, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cScriptFile)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS copyfile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "copyfile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "From", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFile.Caption = "To", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS deletefile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "deletefile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "File", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 25, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 295, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS deletefolder AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />

	*<PropValue>
		Height = 250
		Name = "deletefolder"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxlibrarydirectory WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFolder.Caption = "Folder", ;
		lblFolder.Name = "lblFolder", ;
		txtFolder.Left = 40, ;
		txtFolder.Name = "txtFolder", ;
		txtFolder.Width = 280, ;
		cmdGetFolder.Left = 320, ;
		cmdGetFolder.Name = "cmdGetFolder"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS downloadfile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oLocalFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRemoteFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRemoteFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "downloadfile"
	*</PropValue>

	ADD OBJECT 'lblPassword' AS vfpxbaselabel WITH ;
		Caption = "Password", ;
		Left = 0, ;
		Name = "lblPassword", ;
		Top = 80
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblRemoteFile' AS vfpxbaselabel WITH ;
		Caption = "Remote file", ;
		Left = 0, ;
		Name = "lblRemoteFile", ;
		Top = 5
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblUserName' AS vfpxbaselabel WITH ;
		Caption = "User name", ;
		Left = 0, ;
		Name = "lblUserName", ;
		Top = 55
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oLocalFile' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cLocalFile, ;
		Left = 0, ;
		Name = "oLocalFile", ;
		Top = 25, ;
		lblFile.Caption = "Local file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 70, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 250, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtPassword' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtPassword", ;
		Top = 75, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRemoteFile' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtRemoteFile", ;
		Top = 0, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUserName' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtUserName", ;
		Top = 50, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.txtUserName.ControlSource   = 'This.Parent.oTask.cUserName'
		This.txtPassword.ControlSource   = 'This.Parent.oTask.cPassword'
		This.txtRemoteFile.ControlSource = 'This.Parent.oTask.cRemoteFile'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cRemoteFile) and not empty(This.oTask.cLocalFile)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS executescript AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblScript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtScript" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "executescript"
	*</PropValue>

	ADD OBJECT 'edtScript' AS vfpxbaseeditbox WITH ;
		Height = 130, ;
		Left = 47, ;
		Name = "edtScript", ;
		Top = 0, ;
		Width = 293
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblScript' AS vfpxbaselabel WITH ;
		Caption = "Script", ;
		Left = 0, ;
		Name = "lblScript", ;
		Top = 2
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />
	
	PROCEDURE loadsettings
		This.edtScript.ControlSource = 'This.Parent.oTask.cCode'
		*** TODO: right-click edit box to display PRG. Need to handle closing it
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cCode)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS readfromini AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oINIFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVariable" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "readfromini"
	*</PropValue>

	ADD OBJECT 'cboItem' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboItem", ;
		Style = 0, ;
		Top = 51, ;
		Width = 159
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboSection' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboSection", ;
		Style = 0, ;
		Top = 25, ;
		Width = 159
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblItem' AS vfpxbaselabel WITH ;
		Caption = "Item", ;
		Left = 0, ;
		Name = "lblItem", ;
		Top = 55
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSection' AS vfpxbaselabel WITH ;
		Caption = "Section", ;
		Left = 0, ;
		Name = "lblSection", ;
		Top = 29
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblVariable' AS vfpxbaselabel WITH ;
		Caption = "Variable", ;
		Left = 0, ;
		Name = "lblVariable", ;
		Top = 80
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oINIFile' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = "INI File (*.ini):ini", ;
		Left = 0, ;
		Name = "oINIFile", ;
		Top = 0, ;
		lblFile.Caption = "INI file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 50, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 270, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtVariable' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtVariable", ;
		Top = 77, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.cboSection.ControlSource  = 'This.Parent.oTask.cSection'
		This.cboItem.ControlSource     = 'This.Parent.oTask.cItem'
		This.txtVariable.ControlSource = 'This.Parent.oTask.cVariable'
		
	ENDPROC

	PROCEDURE savesettings
		This.oTask.cSection = This.cboSection.DisplayValue
		This.oTask.cItem    = This.cboItem.DisplayValue
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cSection) and ;
			 not empty(This.oTask.cItem) and not empty(This.oTask.cVariable)
		
	ENDPROC

	PROCEDURE cboSection.anychange
		local laItems[1], ;
			lnItems
		if file(This.Parent.oTask.cTarget)
			lnItems = ReadINI(This.Parent.oTask.cTarget, This.Parent.oTask.cSection, ;
				0, '', @laItems)
			if lnItems > 0
				acopy(laItems, This.Parent.cboItem.aItems)
				This.Parent.cboItem.Requery()
			endif lnItems > 0
		endif file(This.Parent.oTask.cTarget)
		
	ENDPROC

	PROCEDURE oINIFile.anychange
		local lcContent, ;
			laLines[1], ;
			lnLines, ;
			lnSections, ;
			lnI
		if file(This.Parent.oTask.cTarget)
			lcContent  = filetostr(This.Parent.oTask.cTarget)
			lnLines    = alines(laLines, lcContent)
			lnSections = 0
			for lnI = 1 to lnLines
				lcLine = laLines[lnI]
				if left(lcLine, 1) = '['
					lnSections = lnSections + 1
					dimension This.Parent.cboSection.aItems[lnSections]
					This.Parent.cboSection.aItems[lnSections] = chrtran(lcLine, '[]', '')
				endif left(lcLine, 1) = '['
			next lnI
			This.Parent.cboSection.Requery()
		endif file(This.Parent.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS readfromregistry AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSetting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSetting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMainKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMainKey" UniqueID="" Timestamp="" />

	#INCLUDE "vfpxlibraryregistry.h"
	*<PropValue>
		Name = "readfromregistry"
	*</PropValue>

	ADD OBJECT 'cboMainKey' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboMainKey", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 185
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblKey' AS vfpxbaselabel WITH ;
		Caption = "Key", ;
		Left = 0, ;
		Name = "lblKey", ;
		TabIndex = 4, ;
		Top = 28
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblMainKey' AS vfpxbaselabel WITH ;
		Caption = "Hive", ;
		Left = 0, ;
		Name = "lblMainKey", ;
		TabIndex = 2, ;
		Top = 4
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSetting' AS vfpxbaselabel WITH ;
		Caption = "Setting", ;
		Left = 0, ;
		Name = "lblSetting", ;
		TabIndex = 6, ;
		Top = 53
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblVariable' AS vfpxbaselabel WITH ;
		Caption = "Variable", ;
		Left = 0, ;
		Name = "lblVariable", ;
		TabIndex = 8, ;
		Top = 78
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtKey' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtKey", ;
		TabIndex = 3, ;
		Top = 25, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSetting' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtSetting", ;
		TabIndex = 5, ;
		Top = 50, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVariable' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtVariable", ;
		TabIndex = 7, ;
		Top = 75, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.cboMainKey.ControlSource  = 'This.Parent.oTask.nMainKey'
		This.txtKey.ControlSource      = 'This.Parent.oTask.cKey'
		This.txtSetting.ControlSource  = 'This.Parent.oTask.cSetting'
		This.txtVariable.ControlSource = 'This.Parent.oTask.cVariable'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cKey) and not empty(This.oTask.cSetting) and ;
			 not empty(This.oTask.cVariable)
		
	ENDPROC

	PROCEDURE cboMainKey.Init
		dimension This.aItems[3, 2]
		This.aItems[1, 1] = 'HKEY_CLASSES_ROOT'
		This.aItems[1, 2] = cnHKEY_CLASSES_ROOT
		This.aItems[2, 1] = 'HKEY_CURRENT_USER'
		This.aItems[2, 2] = cnHKEY_CURRENT_USER
		This.aItems[3, 1] = 'HKEY_LOCAL_MACHINE'
		This.aItems[3, 2] = cnHKEY_LOCAL_MACHINE
		dodefault()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS renamefile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "renamefile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "From", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFile.Caption = "To", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS runexe AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWindowMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboWindowMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInfo" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "runexe"
	*</PropValue>

	ADD OBJECT 'cboWindowMode' AS vfpxbasecombobox WITH ;
		Anchor = 4, ;
		BoundColumn = 2, ;
		Height = 24, ;
		Left = 90, ;
		Name = "cboWindowMode", ;
		Top = 140, ;
		Width = 120
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'edtParameters' AS vfpxbaseeditbox WITH ;
		Height = 105, ;
		Left = 90, ;
		Name = "edtParameters", ;
		Top = 25, ;
		Width = 250
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblInfo' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Note: put quotes around parameters containing spaces or other illegal command line characters", ;
		Height = 50, ;
		Left = 0, ;
		Name = "lblInfo", ;
		Top = 170, ;
		Width = 340, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblParameters' AS vfpxbaselabel WITH ;
		Caption = "Parameters", ;
		Left = 0, ;
		Name = "lblParameters", ;
		Top = 25
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblWindowMode' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		Caption = "Window mode", ;
		Left = 0, ;
		Name = "lblWindowMode", ;
		Top = 144
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		cextensions = "EXE", ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "EXE path", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 90, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 230, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings
		This.oSource.cControlSource      = 'This.Parent.oTask.cSource'
		This.edtParameters.ControlSource = 'This.Parent.oTask.cParameters'
		This.cboWindowMode.ControlSource = 'This.Parent.oTask.cWindowMode'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

	PROCEDURE cboWindowMode.Init
		dimension This.aItems[4, 2]
		This.aItems[1, 1] = 'Normal'
		This.aItems[1, 2] = 'NOR'
		This.aItems[2, 1] = 'Hidden'
		This.aItems[2, 2] = 'HID'
		This.aItems[3, 1] = 'Minimized'
		This.aItems[3, 2] = 'MIN'
		This.aItems[4, 1] = 'Maximized'
		This.aItems[4, 2] = 'MAX'
		dodefault()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS runprg AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInfo" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "runprg"
	*</PropValue>

	ADD OBJECT 'edtParameters' AS vfpxbaseeditbox WITH ;
		AddLineFeeds = .T., ;
		Height = 105, ;
		Left = 90, ;
		Name = "edtParameters", ;
		Top = 25, ;
		Width = 250
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblInfo' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Note: put quotes around string parameters", ;
		Height = 50, ;
		Left = 0, ;
		Name = "lblInfo", ;
		Top = 145, ;
		Width = 340, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblParameters' AS vfpxbaselabel WITH ;
		Caption = "Parameters", ;
		Left = 0, ;
		Name = "lblParameters", ;
		Top = 25
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		cextensions = "PRG", ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "PRG path", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 90, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 230, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings
		This.oSource.cControlSource      = 'This.Parent.oTask.cSource'
		This.edtParameters.ControlSource = 'This.Parent.oTask.cParameters'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS setvariable AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkEncrypt" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<PropValue>
		Name = "setvariable"
	*</PropValue>

	ADD OBJECT 'chkEncrypt' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Encrypt", ;
		Left = 85, ;
		Name = "chkEncrypt", ;
		Top = 55
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblValue' AS vfpxbaselabel WITH ;
		Caption = "Value", ;
		Left = 0, ;
		Name = "lblValue", ;
		Top = 28
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblVariable' AS vfpxbaselabel WITH ;
		Caption = "Variable name", ;
		Left = 0, ;
		Name = "lblVariable", ;
		Top = 3
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtValue' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 85, ;
		Name = "txtValue", ;
		Top = 25, ;
		Width = 260
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVariable' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 85, ;
		Name = "txtVariable", ;
		Top = 0, ;
		Width = 260
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.txtVariable.ControlSource = 'This.Parent.oTask.cVariable'
		This.txtValue.ControlSource    = 'This.Parent.oTask.cValue'
		This.chkEncrypt.ControlSource  = 'This.Parent.oTask.lEncrypt'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cVariable) and not empty(This.oTask.cValue)
		
	ENDPROC

	PROCEDURE txtVariable.Valid
		*** TODO: ensure not dupe
		local lnI, ;
			lcChar, ;
			llReturn
		for lnI = 1 to len(This.Value)
			lcChar = substr(This.Value, lnI)
			llReturn = isalpha(lcChar) or (isdigit(lcChar) and lnI > 1)
			if not llReturn
				messagebox('That is not a valid variable name.', MB_ICONSTOP, 'DeployFox')
				exit
			endif not llReturn
		next lnI
		return llReturn
		
	ENDPROC

ENDDEFINE

DEFINE CLASS signtool AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oFilePath" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "signtool"
	*</PropValue>

	ADD OBJECT 'lblDescription' AS vfpxbaselabel WITH ;
		Caption = "Description", ;
		Left = 1, ;
		Name = "lblDescription", ;
		Top = 28
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oFilePath' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		cextensions = "EXE", ;
		Left = 0, ;
		Name = "oFilePath", ;
		Top = 0, ;
		lblFile.Caption = "File to sign", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 75, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 245, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtDescription' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 75, ;
		Name = "txtDescription", ;
		Top = 25, ;
		Width = 270
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.txtDescription.ControlSource = 'This.Parent.oTask.cDescription'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS taskuibase AS vfpxbasecontainer OF "vfpxbaselibrary.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: loadsettings		&& Loads the settings
		*m: savesettings		&& Saves the settings
		*m: validate		&& Ensures the values are valid
		*p: otask		&& A reference to a Task object
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 130
		Name = "taskuibase"
		otask = .NULL.
		Width = 345
		_memberdata = <VFPData>
			<memberdata name="loadsettings" display="LoadSettings"/>
			<memberdata name="otask" display="oTask"/>
			<memberdata name="savesettings" display="SaveSettings"/>
			<memberdata name="validate" display="Validate"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE loadsettings		&& Loads the settings
		* Abstract in this class
		
	ENDPROC

	PROCEDURE Refresh
		This.Visible = Thisform.cTaskType = lower(This.Class)
		
	ENDPROC

	PROCEDURE savesettings		&& Saves the settings
		* Abstract in this class
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		* Abstract in this class
		
	ENDPROC

ENDDEFINE

DEFINE CLASS unzipfile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "unzipfile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = "ZIP File (*.zip):zip", ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "ZIP file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 50, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 270, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxlibrarydirectory WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFolder.Caption = "Unzip to", ;
		lblFolder.Name = "lblFolder", ;
		txtFolder.Height = 23, ;
		txtFolder.Left = 50, ;
		txtFolder.Name = "txtFolder", ;
		txtFolder.Top = 0, ;
		txtFolder.Width = 270, ;
		cmdGetFolder.Left = 320, ;
		cmdGetFolder.Name = "cmdGetFolder"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS uploadfile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oLocalFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRemoteFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRemoteFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "uploadfile"
	*</PropValue>

	ADD OBJECT 'lblPassword' AS vfpxbaselabel WITH ;
		Caption = "Password", ;
		Left = 0, ;
		Name = "lblPassword", ;
		Top = 55
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblRemoteFile' AS vfpxbaselabel WITH ;
		Caption = "Remote file", ;
		Left = 0, ;
		Name = "lblRemoteFile", ;
		Top = 105
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblServer' AS vfpxbaselabel WITH ;
		Caption = "Server", ;
		Left = 0, ;
		Name = "lblServer", ;
		Top = 3
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblUserName' AS vfpxbaselabel WITH ;
		Caption = "User name", ;
		Left = 0, ;
		Name = "lblUserName", ;
		Top = 30
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oLocalFile' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cLocalFile, ;
		Left = 0, ;
		Name = "oLocalFile", ;
		Top = 75, ;
		lblFile.Caption = "Local file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 70, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 250, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtPassword' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtPassword", ;
		Top = 50, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRemoteFile' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtRemoteFile", ;
		Top = 100, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtServer' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtServer", ;
		Top = 0, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUserName' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtUserName", ;
		Top = 25, ;
		Width = 272
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings		&& Loads the settings
		This.txtServer.ControlSource     = 'This.Parent.oTask.cServer'
		This.txtUserName.ControlSource   = 'This.Parent.oTask.cUserName'
		This.txtPassword.ControlSource   = 'This.Parent.oTask.cPassword'
		This.txtRemoteFile.ControlSource = 'This.Parent.oTask.cRemoteFile'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cRemoteFile) and not empty(This.oTask.cLocalFile) and ;
			not empty(This.oTask.cServer) and not empty(This.oTask.cUserName) and ;
			not empty(This.oTask.cPassword)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS writetofile AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOverwrite" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "writetofile"
	*</PropValue>

	ADD OBJECT 'chkOverwrite' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		Caption = "Overwrite file", ;
		Left = 0, ;
		Name = "chkOverwrite", ;
		Top = 215
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'edtSource' AS vfpxbaseeditbox WITH ;
		Height = 180, ;
		Left = 30, ;
		Name = "edtSource", ;
		Top = 30, ;
		Width = 310
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblSource' AS vfpxbaselabel WITH ;
		Caption = "Text", ;
		Left = 0, ;
		Name = "lblSource", ;
		Top = 30
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oTarget' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 0, ;
		Visible = .T., ;
		lblFile.Name = "lblFile", ;
		txtFile.Name = "txtFile", ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings		&& Loads the settings
		This.edtSource.ControlSource    = 'This.Parent.oTask.cSource'
		This.chkOverwrite.ControlSource = 'This.Parent.oTask.lOverwrite'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS writetoini AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oINIFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "writetoini"
	*</PropValue>

	ADD OBJECT 'cboItem' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboItem", ;
		Style = 0, ;
		Top = 51, ;
		Width = 159
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboSection' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboSection", ;
		Style = 0, ;
		Top = 25, ;
		Width = 159
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblItem' AS vfpxbaselabel WITH ;
		Caption = "Item", ;
		Left = 0, ;
		Name = "lblItem", ;
		Top = 55
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSection' AS vfpxbaselabel WITH ;
		Caption = "Section", ;
		Left = 0, ;
		Name = "lblSection", ;
		Top = 29
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblValue' AS vfpxbaselabel WITH ;
		Caption = "Value", ;
		Left = 0, ;
		Name = "lblValue", ;
		Top = 80
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oINIFile' AS vfpxlibraryfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = "INI File (*.ini):ini", ;
		Left = 0, ;
		Name = "oINIFile", ;
		Top = 0, ;
		lblFile.Caption = "INI file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 50, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 270, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="vfpxlibraryfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtValue' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtValue", ;
		Top = 77, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings		&& Loads the settings
		This.cboSection.ControlSource = 'This.Parent.oTask.cSection'
		This.cboItem.ControlSource    = 'This.Parent.oTask.cItem'
		This.txtValue.ControlSource   = 'This.Parent.oTask.cValue'
		
	ENDPROC

	PROCEDURE savesettings		&& Saves the settings
		This.oTask.cSection = This.cboSection.DisplayValue
		This.oTask.cItem    = This.cboItem.DisplayValue
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cSource) and not empty(This.oTask.cSection) and ;
			 not empty(This.oTask.cItem) and not empty(This.oTask.cValue)
		
	ENDPROC

	PROCEDURE cboSection.anychange
		local laItems[1], ;
			lnItems
		if file(This.Parent.oTask.cTarget)
			lnItems = ReadINI(This.Parent.oTask.cTarget, This.Parent.oTask.cSection, ;
				0, '', @laItems)
			if lnItems > 0
				acopy(laItems, This.Parent.cboItem.aItems)
				This.Parent.cboItem.Requery()
			endif lnItems > 0
		endif file(This.Parent.oTask.cTarget)
		
	ENDPROC

	PROCEDURE oINIFile.anychange
		local lcContent, ;
			laLines[1], ;
			lnLines, ;
			lnSections, ;
			lnI
		if file(This.Parent.oTask.cTarget)
			lcContent  = filetostr(This.Parent.oTask.cTarget)
			lnLines    = alines(laLines, lcContent)
			lnSections = 0
			for lnI = 1 to lnLines
				lcLine = laLines[lnI]
				if left(lcLine, 1) = '['
					lnSections = lnSections + 1
					dimension This.Parent.cboSection.aItems[lnSections]
					This.Parent.cboSection.aItems[lnSections] = chrtran(lcLine, '[]', '')
				endif left(lcLine, 1) = '['
			next lnI
			This.Parent.cboSection.Requery()
		endif file(This.Parent.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS writetoregistry AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSetting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSetting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMainKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMainKey" UniqueID="" Timestamp="" />

	#INCLUDE "vfpxlibraryregistry.h"
	*<PropValue>
		Name = "writetoregistry"
	*</PropValue>

	ADD OBJECT 'cboMainKey' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .F., ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboMainKey", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 185
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboType' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		Height = 24, ;
		Left = 49, ;
		Name = "cboType", ;
		TabIndex = 9, ;
		Top = 101, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblKey' AS vfpxbaselabel WITH ;
		Caption = "Key", ;
		Left = 0, ;
		Name = "lblKey", ;
		TabIndex = 4, ;
		Top = 28
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblMainKey' AS vfpxbaselabel WITH ;
		Caption = "Hive", ;
		Left = 0, ;
		Name = "lblMainKey", ;
		TabIndex = 2, ;
		Top = 4
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSetting' AS vfpxbaselabel WITH ;
		Caption = "Setting", ;
		Left = 0, ;
		Name = "lblSetting", ;
		TabIndex = 6, ;
		Top = 53
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblType' AS vfpxbaselabel WITH ;
		Caption = "Type", ;
		Left = 0, ;
		Name = "lblType", ;
		TabIndex = 10, ;
		Top = 105
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblValue' AS vfpxbaselabel WITH ;
		Caption = "Value", ;
		Left = 0, ;
		Name = "lblValue", ;
		TabIndex = 8, ;
		Top = 78
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtKey' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtKey", ;
		TabIndex = 3, ;
		Top = 25, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSetting' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtSetting", ;
		TabIndex = 5, ;
		Top = 50, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtValue' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtValue", ;
		TabIndex = 7, ;
		Top = 75, ;
		Width = 294
		*< END OBJECT: ClassLib="vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings		&& Loads the settings
		This.cboMainKey.ControlSource = 'This.Parent.oTask.nMainKey'
		This.txtKey.ControlSource     = 'This.Parent.oTask.cKey'
		This.txtSetting.ControlSource = 'This.Parent.oTask.cSetting'
		This.txtValue.ControlSource   = 'This.Parent.oTask.uValue'
		This.cboType.ControlSource    = 'This.Parent.oTask.nType'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cKey) and not empty(This.oTask.cSetting) and ;
			 not empty(This.oTask.uValue)
		
	ENDPROC

	PROCEDURE cboMainKey.Init
		dimension This.aItems[3, 2]
		This.aItems[1, 1] = 'HKEY_CURRENT_USER'
		This.aItems[1, 2] = cnHKEY_CURRENT_USER
		This.aItems[2, 1] = 'HKEY_LOCAL_MACHINE'
		This.aItems[2, 2] = cnHKEY_LOCAL_MACHINE
		This.aItems[3, 1] = 'HKEY_CLASSES_ROOT'
		This.aItems[3, 2] = cnHKEY_CLASSES_ROOT
		dodefault()
		
	ENDPROC

	PROCEDURE cboType.Init
		dimension This.aItems[3, 2]
		This.aItems[1, 1] = 'String'
		This.aItems[1, 2] = cnREG_SZ
		This.aItems[2, 1] = 'String with Unexpanded Environment Variables'
		This.aItems[2, 2] = cnREG_EXPAND_SZ
		This.aItems[3, 1] = '32-bit Number'
		This.aItems[3, 2] = cnREG_DWORD
		dodefault()
		
	ENDPROC

ENDDEFINE
