*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="taskui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS buildexeui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkRecompile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "buildexeui"
	*</PropValue>

	ADD OBJECT 'chkRecompile' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Recompile all files", ;
		Left = 0, ;
		Name = "chkRecompile", ;
		Top = 50
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = Project (*.pjx):pjx, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "Project", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 75, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 245, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		cextensions = Executable (*.exe):exe, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFile.Caption = "EXE to create", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 75, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 245, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings
		This.chkRecompile.ControlSource = 'This.Parent.oTask.lRecompile'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

	PROCEDURE oSource.LostFocus
		if not empty(This.Value) and empty(This.Parent.oTask.cTarget)
			This.Parent.oTask.cTarget = forceext(This.Value, 'exe')
			This.Parent.oTarget.Refresh()
		endif not empty(This.Value) ...
		
	ENDPROC

ENDDEFINE

DEFINE CLASS buildsetupinnoui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oScriptFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "buildsetupinnoui"
	*</PropValue>

	ADD OBJECT 'oScriptFile' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cScriptFile, ;
		cextensions = Inno Setup Script (*.iss):iss, ;
		Left = 0, ;
		Name = "oScriptFile", ;
		Top = 0, ;
		lblFile.Caption = "Script file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 56, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 264, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cScriptFile)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS copyfileui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "copyfile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "From", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFile.Caption = "To", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS deletefileui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "deletefile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "File", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 25, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 295, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS deletefolderui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />

	*<PropValue>
		Height = 250
		Name = "deletefolder"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxdirectory WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFolder.Caption = "Folder", ;
		lblFolder.Name = "lblFolder", ;
		txtFolder.Left = 40, ;
		txtFolder.Name = "txtFolder", ;
		txtFolder.Width = 280, ;
		cmdGetFolder.Left = 320, ;
		cmdGetFolder.Name = "cmdGetFolder"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS downloadfileui AS uploaddownloadbase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Name = "downloadfileui"
		lblServer.Name = "lblServer"
		txtServer.Name = "txtServer"
		lblUserName.Name = "lblUserName"
		txtUserName.Name = "txtUserName"
		lblPassword.Name = "lblPassword"
		txtPassword.Name = "txtPassword"
		oLocalFile.cmdGetFile.Name = "cmdGetFile"
		oLocalFile.lblFile.Name = "lblFile"
		oLocalFile.Name = "oLocalFile"
		oLocalFile.txtFile.Name = "txtFile"
		lblRemoteFile.Name = "lblRemoteFile"
		txtRemoteFile.Name = "txtRemoteFile"
	*</PropValue>

ENDDEFINE

DEFINE CLASS executepsscriptui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oScriptFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "executepsscriptui"
	*</PropValue>

	ADD OBJECT 'oScriptFile' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cScriptFile, ;
		cextensions = PowerShell Script (*.ps1):ps1, ;
		Left = 0, ;
		Name = "oScriptFile", ;
		Top = 0, ;
		Visible = .T., ;
		lblFile.Caption = "PowerShell script", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 97, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 223, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

ENDDEFINE

DEFINE CLASS executescriptui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblScript" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtScript" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "executescriptui"
	*</PropValue>

	ADD OBJECT 'edtScript' AS vfpxbaseeditbox WITH ;
		Height = 128, ;
		Left = 47, ;
		Name = "edtScript", ;
		Top = 0, ;
		Width = 293
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblScript' AS vfpxbaselabel WITH ;
		Caption = "Script", ;
		FontUnderline = .T., ;
		ForeColor = 0,0,255, ;
		Left = 0, ;
		Name = "lblScript", ;
		Top = 2
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />
	
	PROCEDURE loadsettings
		This.edtScript.ControlSource = 'This.Parent.oTask.cCode'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cCode)
		
	ENDPROC

	PROCEDURE lblScript.Click
		* Use a PRG to edit the code so we get IntelliSense.
		
		local lcFile, ;
			loForm
		lcFile = addbs(sys(2023)) + 'Script.'
		strtofile(This.Parent.edtScript.Value, lcFile)
		loForm = newobject('VFPXBaseForm', 'VFPXBaseLibrary.vcx')
		with loForm
			.AlwaysOnTop = .T.
			.Caption     = 'Script'
			.Width       = Thisform.Width
			.Height      = Thisform.Height
			.Top         = 0
			.Left        = 0
			.FontName    = 'Courier New'
			.FontSize    = 10
		endwith
		
		* Modify the code.
		
		modify command (lcFile) window (loForm.Name) 
		This.Parent.oTask.cCode = filetostr(lcFile)
		This.Parent.Refresh()
		erase (lcFile)
		Thisform.SaveTask()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS inibase AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oINIFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboSection" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblItem" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboItem" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: getitemsforsection		&& Gets the items for the selected section
		*m: getsections		&& Gets the sections from the selected INI file
	*</DefinedPropArrayMethod>

	*<PropValue>
		Name = "inibase"
		_memberdata = <VFPData>
			<memberdata name="getitemsforsection" display="GetItemsForSection"/>
			<memberdata name="getsections" display="GetSections"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cboItem' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		laddnewitemtolist = .T., ;
		Left = 50, ;
		Name = "cboItem", ;
		Style = 0, ;
		Top = 51, ;
		Width = 159
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboSection' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		laddnewitemtolist = .T., ;
		Left = 50, ;
		Name = "cboSection", ;
		Style = 0, ;
		Top = 25, ;
		Width = 159
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblItem' AS vfpxbaselabel WITH ;
		Caption = "Item", ;
		Left = 0, ;
		Name = "lblItem", ;
		Top = 55
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSection' AS vfpxbaselabel WITH ;
		Caption = "Section", ;
		Left = 0, ;
		Name = "lblSection", ;
		Top = 29
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oINIFile' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = "INI File (*.ini):ini", ;
		Left = 0, ;
		Name = "oINIFile", ;
		Top = 0, ;
		lblFile.Caption = "INI file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 50, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 270, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE getitemsforsection		&& Gets the items for the selected section
		local laItems[1], ;
			lnItems
		if file(This.oTask.cSource)
		
		* Populate the item list with items from the selected section of the INI file.
		
			lnItems = ReadINI(This.oTask.cSource, This.oTask.cSection, 0, '', @laItems)
			if lnItems > 0
				acopy(laItems, This.cboItem.aItems)
			endif lnItems > 0
		
		* Add the selected item to the list if necessary.
		
			if not empty(This.oTask.cItem) and ;
				ascan(This.cboItem.aItems, This.oTask.cItem) = 0
				lnItems = lnItems + 1
				dimension This.cboItem.aItems[lnItems]
				This.cboItem.aItems[lnItems] = This.oTask.cItem
			endif not empty(This.oTask.cSection) ...
		
		* Requery the list.
		
			asort(This.cboItem.aItems)
			This.cboItem.Requery()
		endif file(This.oTask.cSource)
		
	ENDPROC

	PROCEDURE getsections		&& Gets the sections from the selected INI file
		local lcContent, ;
			lnLines, ;
			laLines[1], ;
			lnSections, ;
			lnI, ;
			lcLine
		if file(This.oTask.cSource)
		
		* Populate the section list with sections from the selected INI file.
		
			lcContent  = filetostr(This.oTask.cSource)
			lnLines    = alines(laLines, lcContent)
			lnSections = 0
			for lnI = 1 to lnLines
				lcLine = laLines[lnI]
				if left(lcLine, 1) = '['
					lnSections = lnSections + 1
					dimension This.cboSection.aItems[lnSections]
					This.cboSection.aItems[lnSections] = chrtran(lcLine, '[]', '')
				endif left(lcLine, 1) = '['
			next lnI
		
		* Add the selected section to the list if necessary.
		
			if not empty(This.oTask.cSection) and ;
				ascan(This.cboSection.aItems, This.oTask.cSection) = 0
				lnSections = lnSections + 1
				dimension This.cboSection.aItems[lnSections]
				This.cboSection.aItems[lnSections] = This.oTask.cSection
			endif not empty(This.oTask.cSection) ...
		
		* Requery the list.
		
			asort(This.cboSection.aItems)
			This.cboSection.Requery()
		endif file(This.cFileName)
		
	ENDPROC

	PROCEDURE loadsettings
		This.cboSection.ControlSource = 'This.Parent.oTask.cSection'
		This.cboItem.ControlSource    = 'This.Parent.oTask.cItem'
		
	ENDPROC

	PROCEDURE Refresh
		dodefault()
		if This.Visible
			This.GetSections()
			This.GetItemsForSection()
		endif This.Visible
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cSection) and ;
			 not empty(This.oTask.cItem)
		
	ENDPROC

	PROCEDURE cboSection.anychange
		This.Parent.GetItemsForSection()
		
	ENDPROC

	PROCEDURE oINIFile.LostFocus
		This.Parent.GetSections()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS readfrominiui AS inibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboVariable" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "readfromini"
		oINIFile.cmdGetFile.Name = "cmdGetFile"
		oINIFile.lblFile.Name = "lblFile"
		oINIFile.Name = "oINIFile"
		oINIFile.txtFile.Name = "txtFile"
		lblSection.Name = "lblSection"
		cboSection.Name = "cboSection"
		lblItem.Name = "lblItem"
		cboItem.Name = "cboItem"
	*</PropValue>

	ADD OBJECT 'cboVariable' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboVariable", ;
		Style = 0, ;
		TabIndex = 6, ;
		Top = 77, ;
		Width = 159
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblVariable' AS vfpxbaselabel WITH ;
		Caption = "Variable", ;
		Left = 0, ;
		Name = "lblVariable", ;
		TabIndex = 7, ;
		Top = 80
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />
	
	PROCEDURE loadsettings
		dodefault()
		This.cboVariable.ControlSource = 'This.Parent.oTask.cVariable'
		
	ENDPROC

	PROCEDURE Refresh
		local laVariables[1], ;
			lnVariables
		dodefault()
		if This.Visible
			lnVariables = Thisform.oEngine.GetVariableNames(@laVariables)
			if lnVariables > 0
				dimension This.cboVariable.aItems[lnVariables]
				acopy(laVariables, This.cboVariable.aItems)
				This.cboVariable.Requery()
			endif lnVariables > 0
		endif This.Visible
		
	ENDPROC

	PROCEDURE validate
		local llReturn
		llReturn = dodefault()
		llReturn = llReturn and not empty(This.oTask.cVariable)
		return llReturn
		
	ENDPROC

ENDDEFINE

DEFINE CLASS readfromregistryui AS registrybase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboVariable" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "readfromregistry"
		lblKey.Name = "lblKey"
		txtKey.Name = "txtKey"
		lblSetting.Name = "lblSetting"
		txtSetting.Name = "txtSetting"
		cboMainKey.Name = "cboMainKey"
		lblMainKey.Name = "lblMainKey"
	*</PropValue>

	ADD OBJECT 'cboVariable' AS vfpxbasecombobox WITH ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboVariable", ;
		Style = 0, ;
		TabIndex = 6, ;
		Top = 76, ;
		Width = 159
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblVariable' AS vfpxbaselabel WITH ;
		Caption = "Variable", ;
		Left = 0, ;
		Name = "lblVariable", ;
		TabIndex = 7, ;
		Top = 79
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />
	
	PROCEDURE loadsettings
		dodefault()
		This.cboVariable.ControlSource = 'This.Parent.oTask.cVariable'
		
	ENDPROC

	PROCEDURE Refresh
		local laVariables[1], ;
			lnVariables
		dodefault()
		if This.Visible
			lnVariables = Thisform.oEngine.GetVariableNames(@laVariables)
			if lnVariables > 0
				dimension This.cboVariable.aItems[lnVariables]
				acopy(laVariables, This.cboVariable.aItems)
				This.cboVariable.Requery()
			endif lnVariables > 0
		endif This.Visible
		
	ENDPROC

	PROCEDURE validate
		local llReturn
		llReturn = dodefault()
		llReturn = llReturn and not empty(This.oTask.cVariable)
		return llReturn
		
	ENDPROC

ENDDEFINE

DEFINE CLASS registrybase AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSetting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSetting" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboMainKey" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblMainKey" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<PropValue>
		Name = "registrybase"
	*</PropValue>

	ADD OBJECT 'cboMainKey' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		BoundTo = .F., ;
		Height = 24, ;
		Left = 50, ;
		Name = "cboMainKey", ;
		TabIndex = 1, ;
		Top = 0, ;
		Width = 185
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblKey' AS vfpxbaselabel WITH ;
		Caption = "Key", ;
		Left = 0, ;
		Name = "lblKey", ;
		TabIndex = 4, ;
		Top = 29
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblMainKey' AS vfpxbaselabel WITH ;
		Caption = "Hive", ;
		Left = 0, ;
		Name = "lblMainKey", ;
		TabIndex = 2, ;
		Top = 4
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSetting' AS vfpxbaselabel WITH ;
		Caption = "Setting", ;
		Left = 0, ;
		Name = "lblSetting", ;
		TabIndex = 6, ;
		Top = 54
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtKey' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		MaxLength = 255, ;
		Name = "txtKey", ;
		TabIndex = 3, ;
		Top = 26, ;
		Width = 294
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtSetting' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtSetting", ;
		TabIndex = 5, ;
		Top = 51, ;
		Width = 294
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.txtKey.ControlSource     = 'This.Parent.oTask.cKey'
		This.txtSetting.ControlSource = 'This.Parent.oTask.cSetting'
		
	ENDPROC

	PROCEDURE savesettings
		This.oTask.nMainKey = This.cboMainKey.aItems[This.cboMainKey.ListIndex, 2]
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cKey) and not empty(This.oTask.cSetting)
		
	ENDPROC

	PROCEDURE cboMainKey.Init
		dimension This.aItems[3, 2]
		This.aItems[1, 1] = 'HKEY_CLASSES_ROOT'
		This.aItems[1, 2] = cnHKEY_CLASSES_ROOT
		This.aItems[2, 1] = 'HKEY_CURRENT_USER'
		This.aItems[2, 2] = cnHKEY_CURRENT_USER
		This.aItems[3, 1] = 'HKEY_LOCAL_MACHINE'
		This.aItems[3, 2] = cnHKEY_LOCAL_MACHINE
		dodefault()
		
	ENDPROC

	PROCEDURE cboMainKey.Refresh
		This.Value = ascan(This.aItems, This.Parent.oTask.nMainKey, -1, -1, 2, 8)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS renamefileui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "renamefile"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "From", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFile.Caption = "To", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 35, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 285, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS runbatui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oBatFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "runbatui"
	*</PropValue>

	ADD OBJECT 'oBatFile' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cBatFile, ;
		cextensions = Batch file (*.bat):bat, ;
		Left = 0, ;
		Name = "oBatFile", ;
		Top = 0, ;
		Visible = .T., ;
		lblFile.Caption = "Batch file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 56, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 264, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

ENDDEFINE

DEFINE CLASS runexeui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblWindowMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboWindowMode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInfo" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "runexeui"
		Width = 345
	*</PropValue>

	ADD OBJECT 'cboWindowMode' AS vfpxbasecombobox WITH ;
		Anchor = 4, ;
		BoundColumn = 2, ;
		Height = 24, ;
		Left = 90, ;
		Name = "cboWindowMode", ;
		Top = 95, ;
		Width = 120
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'edtParameters' AS vfpxbaseeditbox WITH ;
		Height = 68, ;
		Left = 90, ;
		Name = "edtParameters", ;
		Top = 25, ;
		Width = 250
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblInfo' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Note: put quotes around parameters containing spaces or other illegal command line characters", ;
		Height = 50, ;
		Left = 0, ;
		Name = "lblInfo", ;
		Top = 122, ;
		Width = 340, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblParameters' AS vfpxbaselabel WITH ;
		Caption = "Parameters", ;
		Left = 0, ;
		Name = "lblParameters", ;
		Top = 25
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblWindowMode' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		Caption = "Window mode", ;
		Left = 0, ;
		Name = "lblWindowMode", ;
		Top = 99
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		cextensions = Executable (*.exe):exe, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "EXE path", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 90, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 230, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings
		This.oSource.cControlSource      = 'This.Parent.oTask.cSource'
		This.edtParameters.ControlSource = 'This.Parent.oTask.cParameters'
		This.cboWindowMode.ControlSource = 'This.Parent.oTask.cWindowMode'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

	PROCEDURE cboWindowMode.Init
		dimension This.aItems[4, 2]
		This.aItems[1, 1] = 'Normal'
		This.aItems[1, 2] = 'NOR'
		This.aItems[2, 1] = 'Hidden'
		This.aItems[2, 2] = 'HID'
		This.aItems[3, 1] = 'Minimized'
		This.aItems[3, 2] = 'MIN'
		This.aItems[4, 1] = 'Maximized'
		This.aItems[4, 2] = 'MAX'
		dodefault()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS runprgui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtParameters" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInfo" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "runprgui"
	*</PropValue>

	ADD OBJECT 'edtParameters' AS vfpxbaseeditbox WITH ;
		AddLineFeeds = .T., ;
		Height = 98, ;
		Left = 90, ;
		Name = "edtParameters", ;
		Top = 25, ;
		Width = 250
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblInfo' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		AutoSize = .F., ;
		Caption = "Note: put quotes around string parameters", ;
		Height = 50, ;
		Left = 0, ;
		Name = "lblInfo", ;
		Top = 130, ;
		Width = 340, ;
		WordWrap = .T.
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblParameters' AS vfpxbaselabel WITH ;
		Caption = "Parameters", ;
		Left = 0, ;
		Name = "lblParameters", ;
		Top = 25
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		cextensions = Program (*.prg):prg, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "PRG path", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 90, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 230, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings
		This.oSource.cControlSource      = 'This.Parent.oTask.cSource'
		This.edtParameters.ControlSource = 'This.Parent.oTask.cParameters'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cSource)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS setvariableui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtVariable" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkEncrypt" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<PropValue>
		Name = "setvariable"
	*</PropValue>

	ADD OBJECT 'chkEncrypt' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Encrypt", ;
		Left = 85, ;
		Name = "chkEncrypt", ;
		Top = 55
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'lblValue' AS vfpxbaselabel WITH ;
		Caption = "Value", ;
		Left = 0, ;
		Name = "lblValue", ;
		Top = 28
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblVariable' AS vfpxbaselabel WITH ;
		Caption = "Variable name", ;
		Left = 0, ;
		Name = "lblVariable", ;
		Top = 3
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtValue' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 85, ;
		Name = "txtValue", ;
		Top = 25, ;
		Width = 260
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtVariable' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 85, ;
		Name = "txtVariable", ;
		Top = 0, ;
		Width = 260
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.txtVariable.ControlSource = 'This.Parent.oTask.cVariable'
		This.txtValue.ControlSource    = 'This.Parent.oTask.cValue'
		This.chkEncrypt.ControlSource  = 'This.Parent.oTask.lEncrypt'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cVariable)
		
	ENDPROC

	PROCEDURE txtVariable.Valid
		local llReturn, ;
			lnI, ;
			lcChar
		lcValue = alltrim(This.Value)
		if empty(lcValue)
			llReturn = .T.
		else
			for lnI = 1 to len(lcValue)
				lcChar   = substr(lcValue, lnI)
				llReturn = isalpha(lcChar) or (isdigit(lcChar) and lnI > 1)
				if not llReturn
					messagebox('That is not a valid variable name.', MB_ICONSTOP, 'DeployFox')
					exit
				endif not llReturn
			next lnI
		endif empty(lcValue)
		return llReturn
		
	ENDPROC

ENDDEFINE

DEFINE CLASS signtoolui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDescription" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "signtoolui"
	*</PropValue>

	ADD OBJECT 'lblDescription' AS vfpxbaselabel WITH ;
		Caption = "Description", ;
		Left = 1, ;
		Name = "lblDescription", ;
		Top = 28
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oTarget' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		cextensions = Executable (*.exe):exe, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 0, ;
		lblFile.Caption = "File to sign", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 75, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 245, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtDescription' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 75, ;
		Name = "txtDescription", ;
		Top = 25, ;
		Width = 270
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings
		This.txtDescription.ControlSource = 'This.Parent.oTask.cDescription'
		
	ENDPROC

	PROCEDURE validate
		return not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS taskuibase AS vfpxbasecontainer OF "..\packages\vfpxframework\vfpxbaselibrary.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<DefinedPropArrayMethod>
		*m: loadsettings		&& Loads the settings
		*m: savesettings		&& Saves the settings
		*m: validate		&& Ensures the values are valid
		*p: otask		&& A reference to a Task object
	*</DefinedPropArrayMethod>

	*<PropValue>
		Height = 155
		Name = "taskuibase"
		otask = .NULL.
		Width = 345
		_memberdata = <VFPData>
			<memberdata name="loadsettings" display="LoadSettings"/>
			<memberdata name="otask" display="oTask"/>
			<memberdata name="savesettings" display="SaveSettings"/>
			<memberdata name="validate" display="Validate"/>
		</VFPData>
	*</PropValue>
	
	PROCEDURE Init
		* Create an object for data binding (it'll be replaced when a task is selected).
		
		lparameters tcClass, ;
			tcFile, ;
			toVariables
		This.oTask = newobject(tcClass, tcFile, '', toVariables)
		This.LoadSettings()
		
	ENDPROC

	PROCEDURE loadsettings		&& Loads the settings
		* Abstract in this class
		
	ENDPROC

	PROCEDURE Refresh
		This.Visible = Thisform.cTaskType + 'ui' = lower(This.Class)
		
	ENDPROC

	PROCEDURE savesettings		&& Saves the settings
		* Abstract in this class
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		* Abstract in this class
		
	ENDPROC

ENDDEFINE

DEFINE CLASS unzipfileui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "unzipfileui"
	*</PropValue>

	ADD OBJECT 'oSource' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cSource, ;
		cextensions = ZIP File (*.zip):zip, ;
		Left = 0, ;
		Name = "oSource", ;
		Top = 0, ;
		lblFile.Caption = "ZIP file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 50, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 270, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'oTarget' AS vfpxdirectory WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 25, ;
		lblFolder.Caption = "Unzip to", ;
		lblFolder.Name = "lblFolder", ;
		txtFolder.Height = 23, ;
		txtFolder.Left = 50, ;
		txtFolder.Name = "txtFolder", ;
		txtFolder.Top = 0, ;
		txtFolder.Width = 270, ;
		cmdGetFolder.Left = 320, ;
		cmdGetFolder.Name = "cmdGetFolder"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS uploaddownloadbase AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtServer" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUserName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oLocalFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblRemoteFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtRemoteFile" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "uploaddownloadbase"
	*</PropValue>

	ADD OBJECT 'lblPassword' AS vfpxbaselabel WITH ;
		Caption = "Password", ;
		Left = 0, ;
		Name = "lblPassword", ;
		Top = 55
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblRemoteFile' AS vfpxbaselabel WITH ;
		Caption = "Remote file", ;
		Left = 0, ;
		Name = "lblRemoteFile", ;
		Top = 105
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblServer' AS vfpxbaselabel WITH ;
		Caption = "Server", ;
		Left = 0, ;
		Name = "lblServer", ;
		Top = 3
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblUserName' AS vfpxbaselabel WITH ;
		Caption = "User name", ;
		Left = 0, ;
		Name = "lblUserName", ;
		Top = 30
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oLocalFile' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cLocalFile, ;
		Left = 0, ;
		Name = "oLocalFile", ;
		Top = 75, ;
		lblFile.Caption = "Local file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 70, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 250, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtPassword' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtPassword", ;
		Top = 50, ;
		Width = 272
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtRemoteFile' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtRemoteFile", ;
		Top = 100, ;
		Width = 272
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtServer' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtServer", ;
		Top = 0, ;
		Width = 272
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUserName' AS vfpxbasetextbox WITH ;
		Height = 23, ;
		Left = 70, ;
		Name = "txtUserName", ;
		Top = 25, ;
		Width = 272
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings		&& Loads the settings
		This.txtServer.ControlSource     = 'This.Parent.oTask.cServer'
		This.txtUserName.ControlSource   = 'This.Parent.oTask.cUserName'
		This.txtPassword.ControlSource   = 'This.Parent.oTask.cPassword'
		This.txtRemoteFile.ControlSource = 'This.Parent.oTask.cRemoteFile'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cRemoteFile) and not empty(This.oTask.cLocalFile) and ;
			not empty(This.oTask.cServer) and not empty(This.oTask.cUserName) and ;
			not empty(This.oTask.cPassword)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS uploadfileui AS uploaddownloadbase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*<PropValue>
		Name = "uploadfileui"
		lblServer.Name = "lblServer"
		txtServer.Name = "txtServer"
		lblUserName.Name = "lblUserName"
		txtUserName.Name = "txtUserName"
		lblPassword.Name = "lblPassword"
		txtPassword.Name = "txtPassword"
		oLocalFile.cmdGetFile.Name = "cmdGetFile"
		oLocalFile.lblFile.Name = "lblFile"
		oLocalFile.Name = "oLocalFile"
		oLocalFile.txtFile.Name = "txtFile"
		lblRemoteFile.Name = "lblRemoteFile"
		txtRemoteFile.Name = "txtRemoteFile"
	*</PropValue>

ENDDEFINE

DEFINE CLASS writetofileui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkOverwrite" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "writetofile"
		Width = 345
	*</PropValue>

	ADD OBJECT 'chkOverwrite' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		Caption = "Overwrite file", ;
		Left = 0, ;
		Name = "chkOverwrite", ;
		Top = 110
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'edtSource' AS vfpxbaseeditbox WITH ;
		Height = 80, ;
		Left = 30, ;
		Name = "edtSource", ;
		Top = 30, ;
		Width = 310
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblSource' AS vfpxbaselabel WITH ;
		Caption = "Text", ;
		Left = 0, ;
		Name = "lblSource", ;
		Top = 30
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oTarget' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 0, ;
		Visible = .T., ;
		lblFile.Name = "lblFile", ;
		txtFile.Name = "txtFile", ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />
	
	PROCEDURE loadsettings		&& Loads the settings
		This.edtSource.ControlSource    = 'This.Parent.oTask.cSource'
		This.chkOverwrite.ControlSource = 'This.Parent.oTask.lOverwrite'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		return not empty(This.oTask.cSource) and not empty(This.oTask.cTarget)
		
	ENDPROC

ENDDEFINE

DEFINE CLASS writetoiniui AS inibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />

	*<PropValue>
		Name = "writetoini2"
		oINIFile.cmdGetFile.Name = "cmdGetFile"
		oINIFile.lblFile.Name = "lblFile"
		oINIFile.Name = "oINIFile"
		oINIFile.txtFile.Name = "txtFile"
		lblSection.Name = "lblSection"
		cboSection.Name = "cboSection"
		lblItem.Name = "lblItem"
		cboItem.Name = "cboItem"
	*</PropValue>

	ADD OBJECT 'lblValue' AS vfpxbaselabel WITH ;
		Caption = "Value", ;
		Left = 0, ;
		Name = "lblValue", ;
		Top = 80
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtValue' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtValue", ;
		Top = 77, ;
		Width = 294
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings		&& Loads the settings
		dodefault()
		This.txtValue.ControlSource = 'This.Parent.oTask.cValue'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		local llReturn
		llReturn = dodefault()
		llReturn = llReturn and not empty(This.oTask.cValue)
		return llReturn
		
	ENDPROC

ENDDEFINE

DEFINE CLASS writetoregistryui AS registrybase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="lblValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtValue" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboType" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<PropValue>
		Name = "writetoregistryui"
		lblKey.Name = "lblKey"
		txtKey.Name = "txtKey"
		lblSetting.Name = "lblSetting"
		txtSetting.Name = "txtSetting"
		cboMainKey.Name = "cboMainKey"
		lblMainKey.Name = "lblMainKey"
	*</PropValue>

	ADD OBJECT 'cboType' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		Height = 24, ;
		Left = 49, ;
		Name = "cboType", ;
		TabIndex = 9, ;
		Top = 102, ;
		Width = 294
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'lblType' AS vfpxbaselabel WITH ;
		Caption = "Type", ;
		Left = 0, ;
		Name = "lblType", ;
		TabIndex = 10, ;
		Top = 106
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblValue' AS vfpxbaselabel WITH ;
		Caption = "Value", ;
		Left = 0, ;
		Name = "lblValue", ;
		TabIndex = 8, ;
		Top = 79
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'txtValue' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		Height = 23, ;
		Left = 50, ;
		Name = "txtValue", ;
		TabIndex = 7, ;
		Top = 76, ;
		Width = 294
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE loadsettings		&& Loads the settings
		dodefault()
		This.txtValue.ControlSource = 'This.Parent.oTask.uValue'
		This.cboType.ControlSource  = 'This.Parent.oTask.nType'
		
	ENDPROC

	PROCEDURE validate		&& Ensures the values are valid
		local llReturn
		llReturn = dodefault()
		llReturn = llReturn and not empty(This.oTask.uValue)
		return llReturn
		
	ENDPROC

	PROCEDURE cboType.Init
		dimension This.aItems[3, 2]
		This.aItems[1, 1] = 'String'
		This.aItems[1, 2] = cnREG_SZ
		This.aItems[2, 1] = 'String with Unexpanded Environment Variables'
		This.aItems[2, 2] = cnREG_EXPAND_SZ
		This.aItems[3, 1] = '32-bit Number'
		This.aItems[3, 2] = cnREG_DWORD
		dodefault()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS zipfilesui AS taskuibase OF "taskui.vcx" 
 	*< CLASSDATA: Baseclass="container" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oTarget" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtSource" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdAddFile" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="opgUpdate" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<DefinedPropArrayMethod>
		*m: addfile		&& Adds a file to the list
	*</DefinedPropArrayMethod>

	*<PropValue>
		Name = "zipfilesui"
		_memberdata = <VFPData>
			<memberdata name="addfile" display="AddFile"/>
		</VFPData>
	*</PropValue>

	ADD OBJECT 'cmdAddFile' AS vfpxgetfile WITH ;
		cafterdone = This.Parent.AddFile(lcFile), ;
		Caption = "Files to zip", ;
		cresult = This.Tag, ;
		Left = 0, ;
		Name = "cmdAddFile", ;
		Top = 25, ;
		Width = 65
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'opgUpdate' AS vfpxbaseoptiongroup WITH ;
		Height = 27, ;
		Left = 48, ;
		Name = "opgUpdate", ;
		Top = 130, ;
		Width = 249, ;
		Vfpxbaseoptionbutton1.Caption = "Create new file", ;
		Vfpxbaseoptionbutton1.Left = 5, ;
		Vfpxbaseoptionbutton1.Name = "Vfpxbaseoptionbutton1", ;
		Vfpxbaseoptionbutton1.Top = 5, ;
		Vfpxbaseoptionbutton2.Caption = "Update existing file", ;
		Vfpxbaseoptionbutton2.Left = 125, ;
		Vfpxbaseoptionbutton2.Name = "Vfpxbaseoptionbutton2", ;
		Vfpxbaseoptionbutton2.Top = 5
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="optiongroup" />

	ADD OBJECT 'oTarget' AS vfpxfile WITH ;
		ccontrolsource = This.Parent.oTask.cTarget, ;
		cextensions = ZIP File (*.zip):zip, ;
		Left = 0, ;
		Name = "oTarget", ;
		Top = 0, ;
		lblFile.Caption = "ZIP file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Left = 70, ;
		txtFile.Name = "txtFile", ;
		txtFile.Width = 250, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'txtSource' AS vfpxbaseeditbox WITH ;
		Height = 98, ;
		Left = 70, ;
		Name = "txtSource", ;
		Top = 25, ;
		Width = 270
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />
	
	PROCEDURE addfile		&& Adds a file to the list
		lparameters tcFile
		This.txtSource.Value = This.txtSource.Value + iif(empty(This.txtSource.Value), '', ccCR) + ;
			tcFile
		
	ENDPROC

	PROCEDURE loadsettings
		This.txtSource.ControlSource = 'This.Parent.oTask.cSource'
		This.opgUpdate.ControlSource = 'This.Parent.oTask.nUpdate'
		
	ENDPROC

ENDDEFINE
