*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="deployfoxui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS deployfoxform AS vfpxpersistentform OF "..\packages\vfpxframework\vfpxpersistentform.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdTasks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column4.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTaskType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaskType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkActive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDown" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNewTask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDeleteTask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblProject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNewProject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDebug" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOpenProject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClone" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkIncomplete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkAlwaysRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpIncomplete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIncomplete" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpAlwaysRuns" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblAlwaysRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnOrder" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblOrder" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<DefinedPropArrayMethod>
		*m: displaytask		&& Displays the settings for the selected task
		*m: openproject		&& Opens the specified project
		*m: savetask		&& Saves the current task
		*m: setupgrid		&& Sets up the grid
		*m: updateproject		&& Updates the selected record in the project
		*m: updaterun		&& Updates the status of running the project
		*p: ctaskid		&& The ID for the current task
		*p: ctasktype		&& The selected task type
		*p: oengine		&& A reference to a DeployFoxEngine
		*p: otask		&& A reference to a Task object for the selected task
	*</DefinedPropArrayMethod>

	*<PropValue>
		BindControls = .F.
		Caption = "DeployFox"
		ctaskid = 
		ctasktype = 
		DataSession = 2
		DoCreate = .T.
		Height = 460
		Icon = deployfox.ico
		MinHeight = 460
		MinWidth = 1070
		Name = "deployfoxform"
		oengine = .NULL.
		otask = .NULL.
		Width = 1070
		_memberdata = <VFPData>
			<memberdata name="displaytask" display="DisplayTask"/>
			<memberdata name="ctasktype" display="cTaskType"/>
			<memberdata name="otask" display="oTask"/>
			<memberdata name="setupgrid" display="SetupGrid"/>
			<memberdata name="updaterun" display="UpdateRun"/>
			<memberdata name="oengine" display="oEngine"/>
			<memberdata name="updateproject" display="UpdateProject"/>
			<memberdata name="openproject" display="OpenProject"/>
			<memberdata name="savetask" display="SaveTask"/>
			<memberdata name="ctaskid" display="cTaskID"/>
		</VFPData>
		oPersist.Left = 1045
		oPersist.Name = "oPersist"
		oPersist.Top = 5
	*</PropValue>

	ADD OBJECT 'cboTaskType' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		ControlSource = "curProject.Task", ;
		Height = 24, ;
		Left = 760, ;
		lrequeryoninit = .F., ;
		Name = "cboTaskType", ;
		TabIndex = 12, ;
		Top = 45, ;
		Width = 209
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkActive' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Active", ;
		ControlSource = "curProject.Active", ;
		Left = 695, ;
		Name = "chkActive", ;
		TabIndex = 16, ;
		Top = 105
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkAlwaysRun' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Always run when single-stepping", ;
		ControlSource = "curProject.AlwaysRun", ;
		Left = 870, ;
		Name = "chkAlwaysRun", ;
		TabIndex = 18, ;
		Top = 105
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkIncomplete' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Incomplete", ;
		ControlSource = "curProject.Incomplete", ;
		Left = 777, ;
		Name = "chkIncomplete", ;
		TabIndex = 17, ;
		Top = 105
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdClone' AS vfpxbasetoolbarbutton WITH ;
		Left = 75, ;
		Name = "cmdClone", ;
		Picture = clone.bmp, ;
		TabIndex = 3, ;
		ToolTipText = "Clone this project", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDebug' AS vfpxbasetoolbarbutton WITH ;
		Left = 150, ;
		Name = "cmdDebug", ;
		Picture = last.bmp, ;
		TabIndex = 5, ;
		ToolTipText = "Debug", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDeleteTask' AS vfpxbasetoolbarbutton WITH ;
		Left = 225, ;
		Name = "cmdDeleteTask", ;
		Picture = removetask.bmp, ;
		TabIndex = 7, ;
		ToolTipText = "Remove the selected task", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDown' AS vfpxbasetoolbarbutton WITH ;
		Left = 275, ;
		Name = "cmdDown", ;
		Picture = down.bmp, ;
		TabIndex = 9, ;
		ToolTipText = "Move the task down", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNewProject' AS vfpxbasetoolbarbutton WITH ;
		Left = 50, ;
		Name = "cmdNewProject", ;
		Picture = newproject.bmp, ;
		TabIndex = 2, ;
		ToolTipText = "Create a new DeployFox project", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNewTask' AS vfpxbasetoolbarbutton WITH ;
		Left = 200, ;
		Name = "cmdNewTask", ;
		Picture = newtask.bmp, ;
		TabIndex = 6, ;
		ToolTipText = "Add a task", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOpenProject' AS vfpxdropdownmenubutton WITH ;
		Left = 10, ;
		Name = "cmdOpenProject", ;
		TabIndex = 1, ;
		ToolTipText = "Open a DeployFox project", ;
		Top = 10, ;
		cmdMain.Name = "cmdMain", ;
		cmdMain.Picture = openproject.bmp, ;
		cmdMenu.Name = "cmdMenu"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxdropdownmenubutton.vcx" BaseClass="container" />

	ADD OBJECT 'cmdRun' AS vfpxbasetoolbarbutton WITH ;
		Left = 125, ;
		Name = "cmdRun", ;
		Picture = next.bmp, ;
		TabIndex = 4, ;
		ToolTipText = "Run", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS vfpxbasetoolbarbutton WITH ;
		Left = 1038, ;
		Name = "cmdSave", ;
		Picture = save.bmp, ;
		TabIndex = 23, ;
		ToolTipText = "Save the settings", ;
		Top = 45
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSettings' AS vfpxbasetoolbarbutton WITH ;
		Left = 325, ;
		Name = "cmdSettings", ;
		Picture = options.bmp, ;
		TabIndex = 10, ;
		ToolTipText = "Options", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUp' AS vfpxbasetoolbarbutton WITH ;
		Left = 250, ;
		Name = "cmdUp", ;
		Picture = up.bmp, ;
		TabIndex = 8, ;
		ToolTipText = "Move the task up", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtComments' AS vfpxbaseeditbox WITH ;
		Anchor = 10, ;
		ControlSource = "curProject.Comments", ;
		Height = 83, ;
		Left = 760, ;
		Name = "edtComments", ;
		TabIndex = 22, ;
		Top = 160, ;
		Width = 300
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'grdTasks' AS vfpxbasegrid WITH ;
		Anchor = 5, ;
		ColumnCount = 5, ;
		Height = 381, ;
		HighlightStyle = 2, ;
		Left = 10, ;
		Name = "grdTasks", ;
		Panel = 1, ;
		ScrollBars = 2, ;
		TabIndex = 11, ;
		Top = 45, ;
		Width = 678, ;
		Column1.ControlSource = "curProject.Order", ;
		Column1.FontName = "Segoe UI", ;
		Column1.Name = "Column1", ;
		Column1.ReadOnly = .T., ;
		Column1.Width = 50, ;
		Column2.ControlSource = "curProject.Name", ;
		Column2.FontName = "Segoe UI", ;
		Column2.Name = "Column2", ;
		Column2.ReadOnly = .T., ;
		Column2.Width = 337, ;
		Column3.ControlSource = "curProject.Task", ;
		Column3.FontName = "Segoe UI", ;
		Column3.Name = "Column3", ;
		Column3.ReadOnly = .T., ;
		Column3.Width = 146, ;
		Column4.ControlSource = "curProject.Active", ;
		Column4.CurrentControl = "Check1", ;
		Column4.FontName = "Segoe UI", ;
		Column4.Name = "Column4", ;
		Column4.Sparse = .F., ;
		Column4.Width = 45, ;
		Column5.ControlSource = "curProject.Status", ;
		Column5.FontName = "Segoe UI", ;
		Column5.Name = "Column5", ;
		Column5.ReadOnly = .T.
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="grid" />

	ADD OBJECT 'grdTasks.Column1.Header1' AS header WITH ;
		Caption = "Order", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column2.Header1' AS header WITH ;
		Caption = "Task", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column3.Header1' AS header WITH ;
		Caption = "Type", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column4.Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Centered = .T., ;
		Height = 10, ;
		Left = 43, ;
		Name = "Check1", ;
		Top = 19, ;
		Value = .F., ;
		Width = 10
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'grdTasks.Column4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Active", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column5.Header1' AS header WITH ;
		Caption = "Status", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1", ;
		ReadOnly = .T.
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'lblAlwaysRun' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		Caption = "Always run", ;
		Left = 626, ;
		Name = "lblAlwaysRun", ;
		TabIndex = 27, ;
		Top = 435
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblComments' AS vfpxbaselabel WITH ;
		Caption = "Comments", ;
		Left = 695, ;
		Name = "lblComments", ;
		TabIndex = 21, ;
		Top = 162
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblIncomplete' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		Caption = "Incomplete", ;
		Left = 511, ;
		Name = "lblIncomplete", ;
		TabIndex = 26, ;
		Top = 435
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblName' AS vfpxbaselabel WITH ;
		Caption = "Name", ;
		Left = 695, ;
		Name = "lblName", ;
		TabIndex = 15, ;
		Top = 78
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblOrder' AS vfpxbaselabel WITH ;
		Caption = "Order", ;
		Left = 695, ;
		Name = "lblOrder", ;
		TabIndex = 19, ;
		Top = 135
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblProject' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		Caption = "Project", ;
		Left = 10, ;
		Name = "lblProject", ;
		TabIndex = 25, ;
		Top = 435
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSettings' AS vfpxbaselabel WITH ;
		BackStyle = 1, ;
		Caption = " Settings ", ;
		Left = 705, ;
		Name = "lblSettings", ;
		Style = 3, ;
		TabIndex = 24, ;
		Top = 248
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblTaskType' AS vfpxbaselabel WITH ;
		Caption = "Task type", ;
		Left = 695, ;
		Name = "lblTaskType", ;
		TabIndex = 13, ;
		Top = 49
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'shpAlwaysRuns' AS vfpxbaseshape WITH ;
		Anchor = 4, ;
		BorderStyle = 0, ;
		BorderWidth = 0, ;
		FillColor = 255,248,220, ;
		FillStyle = 0, ;
		Left = 581, ;
		Name = "shpAlwaysRuns", ;
		Top = 435, ;
		Width = 40
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="shape" />

	ADD OBJECT 'shpIncomplete' AS vfpxbaseshape WITH ;
		Anchor = 4, ;
		BorderStyle = 0, ;
		BorderWidth = 0, ;
		FillColor = 255,128,0, ;
		FillStyle = 0, ;
		Left = 466, ;
		Name = "shpIncomplete", ;
		Top = 435, ;
		Width = 40
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="shape" />

	ADD OBJECT 'shpSettings' AS vfpxbaseshape WITH ;
		Anchor = 15, ;
		Height = 171, ;
		Left = 695, ;
		Name = "shpSettings", ;
		Top = 256, ;
		Width = 365
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="shape" />

	ADD OBJECT 'spnOrder' AS vfpxbasespinner WITH ;
		ControlSource = "curProject.Order", ;
		KeyboardLowValue = 1, ;
		Left = 760, ;
		Name = "spnOrder", ;
		SpinnerLowValue =   1.00, ;
		TabIndex = 20, ;
		Top = 131
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="spinner" />

	ADD OBJECT 'txtName' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		ControlSource = "curProject.Name", ;
		Height = 23, ;
		Left = 760, ;
		Name = "txtName", ;
		TabIndex = 14, ;
		Top = 75, ;
		Width = 300
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE Destroy
		dodefault()
		close databases all
		This.oEngine = .NULL.
		
	ENDPROC

	PROCEDURE displaytask		&& Displays the settings for the selected task
		lparameters tlNew, ;
			tlForce
		local lcControl, ;
			lcFile, ;
			lcUIFile
		select curProject
		if This.cTaskID <> curProject.ID or tlForce
			This.cTaskID   = curProject.ID
			This.cTaskType = lower(trim(Task))
			if not empty(This.cTaskType)
				select curTaskTypes
				locate for lower(Type) = This.cTaskType
				lcFile   = trim(File)
				lcUIFile = trim(UIFile)
				select curProject
				lcControl = 'This.' + This.cTaskType
				if type(lcControl) <> 'O'
					This.NewObject(This.cTaskType, This.cTaskType + 'UI', lcUIFile, '', ;
						This.cTaskType, lcFile, This.oEngine.oVariables)
					with &lcControl
						.lSaveAnchor = .T.
						.Left        = This.shpSettings.Left + 10
						.Top         = This.shpSettings.Top  + 10
						.Width       = This.shpSettings.Width  - 20
						.Height      = This.shpSettings.Height - 20
						.lSaveAnchor = .F.
						.Visible     = .T.
					endwith
				endif type(lcControl) <> 'O'
				with &lcControl
					if tlNew
						.oTask = newobject(This.cTaskType, lcFile, '', This.oEngine.oVariables)
					else
						.oTask.GetSettings(Settings, .T.)
					endif tlNew
				endwith
			endif not empty(This.cTaskType)
			This.Refresh()
		endif This.cTaskID <> curProject.ID ...
		
	ENDPROC

	PROCEDURE Init
		This.cRegistryKey = ccREGISTRY_KEY
		dodefault()
		
		This.oEngine = newobject('DeployFoxEngine', 'DeployFoxEngine.prg')
		
		* Create a cursor for data binding.
		
		This.oEngine.CreateProject('curProject', .T.)
		select *, space(20) as Status ;
			from curProject ;
			into cursor curProject readwrite
		
		* Set up cboTaskType.
		
		select Descrip, Type ;
			from curTaskTypes ;
			order by Descrip ;
			into array This.cboTaskType.aItems
		This.cboTaskType.Requery()
		
		* Set up the grid
		
		This.grdTasks.RecordSource = 'curProject'
		This.SetupGrid()
		This.BindControls = .T.
		
	ENDPROC

	PROCEDURE openproject		&& Opens the specified project
		lparameters tcProject
		This.grdTasks.RecordSource = ''
		llOpened = This.oEngine.OpenProject(tcProject)
		if llOpened
			This.grdTasks.RecordSource = 'curProject'
			This.SetupGrid()
			This.DisplayTask()
		else
			messagebox(This.oEngine.cErrorMessage, MB_ICONSTOP, 'DeployFox')
		endif llOpened
		
	ENDPROC

	PROCEDURE savetask		&& Saves the current task
		lparameters tlQuiet
		local lcControl, ;
			lcSettings
		lcControl = 'This.' + Thisform.cTaskType
		do case
			case empty(curProject.Name) and not tlQuiet
				messagebox('Please enter the name of the task.', MB_ICONEXCLAMATION, ;
					'DeployFox')
			case &lcControl..Validate()
				&lcControl..SaveSettings()
				lcSettings = evaluate(lcControl + '.oTask.SaveSettings()')
				replace Settings with lcSettings in curProject
				This.UpdateProject()
			case not tlQuiet
				messagebox('The settings for this task are incomplete.', MB_ICONINFORMATION, 'DeployFox')
		endcase
		
	ENDPROC

	PROCEDURE setupgrid		&& Sets up the grid
		with This.grdTasks
			.Column1.ControlSource    = 'curProject.Order'
			.Column2.ControlSource    = 'curProject.Name'
			.Column2.DynamicBackColor = 'icase(Incomplete, rgb(255, 128, 0), AlwaysRun, rgb(255, 248, 220), rgb(255, 255, 255))'
			.Column2.DynamicForeColor = "iif(Incomplete, rgb(255, 255, 255), rgb(0, 0, 0))"
			.Column3.ControlSource    = 'curProject.Task'
			.Column4.ControlSource    = 'curProject.Active'
			.Column5.ControlSource    = 'curProject.Status'
			.Column5.DynamicBackColor = "icase(Status = 'Failed', rgb(255, 0, 0), " + ;
				"Status = 'Success', rgb(0, 255, 0), " + ;
				"rgb(255, 255, 255))"
			.Column5.DynamicForeColor = "iif(Status = 'Failed', rgb(255, 255, 255), rgb(0, 0, 0))"
		endwith
		
	ENDPROC

	PROCEDURE updateproject		&& Updates the selected record in the project
		local llNew, ;
			lcID, ;
			loRecord
		select curProject
		llNew = empty(ID)
		if llNew
			lcID = sys(2015)
			replace ID with lcID
			append blank in ProjectFile
			replace ID with lcID in ProjectFile
		endif llNew
		scatter name loRecord memo
		select ProjectFile
		locate for ID = loRecord.ID
		lnOldOrder = Order
		gather name loRecord memo
		
		* Reorder tasks if the order changed.
		
		if lnOldOrder <> loRecord.Order
			select ID, Order ;
				from ProjectFile ;
				where Order >= loRecord.Order and ID <> loRecord.ID ;
				order by Order ;
				into cursor curOrder readwrite
			lnCurrOrder = loRecord.Order
			scan
				lnCurrOrder = lnCurrOrder + This.oEngine.TaskIncrement
				select ProjectFile
				locate for ID = curOrder.ID
				replace Order with lnCurrOrder
				select curProject
				locate for ID = curOrder.ID
				replace Order with lnCurrOrder
			endscan
			use
		endif lnOldOrder <> loRecord.Order
		select curProject
		locate for ID = loRecord.ID
		This.grdTasks.Refresh()
		
	ENDPROC

	PROCEDURE updaterun		&& Updates the status of running the project
		lparameters tcID, ;
			tcStatus, ;
			tcMessage
		local lnSelect, ;
			lnRecno
		lnSelect = select()
		select curProject
		lnRecno = recno()
		locate for ID = tcID
		replace Status with tcStatus
		if between(lnRecno, 1, reccount())
			go lnRecno
		endif between(lnRecno, 1, reccount())
		select (lnSelect)
		This.grdTasks.Refresh()
		if not empty(tcMessage)
			messagebox(tcMessage, MB_ICONSTOP, 'DeployFox')
		endif not empty(tcMessage)
		
	ENDPROC

	PROCEDURE cboTaskType.InteractiveChange
		dodefault()
		Thisform.DisplayTask(.T., .T.)
		
	ENDPROC

	PROCEDURE cboTaskType.Refresh
		* This is only enabled for a new record.
		
		This.Enabled = empty(ID)
		
	ENDPROC

	PROCEDURE cmdClone.Click
		local lcProject
		lcProject = GetFileName('DeployFox Project (*.dbf):dbf', '', 'Clone Project', .T.)
		if not empty(lcProject)
			select ProjectFile
			copy to (lcProject)
			Thisform.OpenProject(lcProject)
		endif not empty(lcProject)
		
	ENDPROC

	PROCEDURE cmdClone.Refresh
		This.Enabled = not empty(Thisform.oEngine.cProjectFile)
		
	ENDPROC

	PROCEDURE cmdDebug.Click
		local lnRecno, ;
			llReturn, ;
			llLast
		select curProject
		lnRecno = recno()
		scan
			replace Status with ''
		endscan
		Thisform.grdTasks.Refresh()
		
		* Run all the "always run" tasks.
		
		bindevent(Thisform.oEngine, 'Update', Thisform, 'UpdateRun')
		llReturn = Thisform.oEngine.AlwaysRun()
		
		* Run the tasks from the selected one to the end.
		
		go lnRecno
		if llReturn
			scan rest for not AlwaysRun and not Incomplete
				Thisform.DisplayTask()
				llReturn = Thisform.oEngine.RunTask(ID, Name, Task, Settings, .T.)
				skip
				llLast = eof()
				skip -1
				do case
					case not llReturn
						exit
					case not llLast and messagebox('Click OK to run the next task or Cancel to stop.', ;
						MB_OKCANCEL + MB_ICONINFORMATION, 'DeployFox') = IDCANCEL
					exit
				endcase
			endscan rest ...
		endif llReturn
		unbindevent(Thisform.oEngine)
		if messagebox('Run complete. Would you like to view the log file?', ;
			MB_YESNO + MB_ICONINFORMATION, 'DeployFox') = IDYES
			OpenFile(Thisform.oEngine.cLogFile)
		endif messagebox ...
		go lnRecno
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdDebug.Refresh
		select count(*) as Cnt ;
			from curProject ;
			into cursor curTasks
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and curTasks.Cnt > 0
		use in curTasks
		select curProject
		
	ENDPROC

	PROCEDURE cmdDeleteTask.Click
		if messagebox('Delete this task?', MB_YESNO + MB_ICONQUESTION, 'DeployFox') = IDYES
			delete in curProject
		*** TODO: renumber all tasks? If so, must update all records in ProjectFile too. 
		***		Or have a button to renumber tasks)
			select ProjectFile
			locate for ID = curProject.ID
			delete
			select curProject
			Thisform.Refresh()
		endif messagebox...
		
	ENDPROC

	PROCEDURE cmdDeleteTask.Refresh
		This.Enabled = not empty(curProject.Task)
		
	ENDPROC

	PROCEDURE cmdDown.Click
		local lcID, ;
			lnNewOrder, ;
			lnCurrOrder
		select curProject
		skip
		lcID       = ID
		lnNewOrder = Order
		skip -1
		lnCurrOrder = Order
		replace Order with lnNewOrder
		Thisform.UpdateProject()
		locate for ID = lcID
		replace Order with lnCurrOrder
		Thisform.UpdateProject()
		locate for Order = lnNewOrder
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdDown.Refresh
		select max(Order) as Order ;
			from curProject ;
			into cursor curMaxOrder
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and ;
			curProject.Order < nvl(curMaxOrder.Order, 0)
		use in curMaxOrder
		select curProject
		
	ENDPROC

	PROCEDURE cmdNewProject.Click
		local lcProject
		lcProject = GetFileName('DeployFox Project (*.dbf):dbf', '', 'New DeployFox Project', .T.)
		if not empty(lcProject)
			Thisform.oEngine.NewProject(lcProject)
			Thisform.OpenProject(lcProject)
		endif not empty(lcProject)
		
	ENDPROC

	PROCEDURE cmdNewTask.Click
		select curProject
		calculate max(Order) to lnOrder
		append blank
		replace Order with lnOrder + Thisform.oEngine.TaskIncrement, ;
			Task with 'SetVariable'
		Thisform.DisplayTask(.T.)
		Thisform.cboTaskType.SetFocus()
		
	ENDPROC

	PROCEDURE cmdNewTask.Refresh
		This.Enabled = not empty(Thisform.oEngine.cProjectFile)
		
	ENDPROC

	PROCEDURE cmdOpenProject.buttonclicked
		local lcProject
		lcProject = GetFileName('DeployFox Project (*.dbf):dbf', '', 'Select DeployFox Project')
		if not empty(lcProject)
			Thisform.OpenProject(lcProject)
		endif not empty(lcProject)
		
	ENDPROC

	PROCEDURE cmdOpenProject.shortcutmenu
		lparameters toMenu,	;
			tcObject
		local laProjects[1], ;
			lnProjects, ;
			lnI, ;
			lcProject, ;
			lcCommand
		lnProjects = Thisform.oEngine.oRecentProjects.GetItems(@laProjects)
		for lnI = 1 to lnProjects
			lcProject = laProjects[lnI, 1]
			lcCommand = '_screen.ActiveForm.OpenProject([' + lcProject + '])'
			toMenu.AddBar(lcProject, lcCommand)
		next loProject
		dodefault(toMenu, tcObject)
		
	ENDPROC

	PROCEDURE cmdRun.Click
		select curProject
		replace all Status with ''
		go top
		Thisform.grdTasks.Refresh()
		bindevent(Thisform.oEngine, 'Update', Thisform, 'UpdateRun')
		Thisform.oEngine.Run()
		unbindevent(Thisform.oEngine)
		if messagebox('Run complete. Would you like to view the log file?', ;
			MB_YESNO + MB_ICONINFORMATION, 'DeployFox') = IDYES
			OpenFile(Thisform.oEngine.cLogFile)
		endif messagebox ...
		
	ENDPROC

	PROCEDURE cmdRun.Refresh
		select count(*) as Cnt ;
			from curProject ;
			into cursor curTasks
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and curTasks.Cnt > 0
		use in curTasks
		select curProject
		
	ENDPROC

	PROCEDURE cmdSave.Click
		Thisform.SaveTask()
		
	ENDPROC

	PROCEDURE cmdSave.Refresh
		This.Enabled = not empty(curProject.Name)
		
	ENDPROC

	PROCEDURE cmdSettings.Click
		local loForm
		loForm = newobject('DeployFoxSettings', 'DeployFoxUI.vcx', '', Thisform.oEngine)
		loForm.Show()
		
	ENDPROC

	PROCEDURE cmdUp.Click
		local lcID, ;
			lnNewOrder, ;
			lnCurrOrder
		select curProject
		skip -1
		lcID       = ID
		lnNewOrder = Order
		skip
		lnCurrOrder = Order
		replace Order with lnNewOrder
		Thisform.UpdateProject()
		locate for ID = lcID
		replace Order with lnCurrOrder
		Thisform.UpdateProject()
		locate for Order = lnNewOrder
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdUp.Refresh
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and ;
			curProject.Order > 1
		
	ENDPROC

	PROCEDURE grdTasks.AfterRowColChange
		lparameters tnColIndex
		Thisform.DisplayTask()
		
	ENDPROC

	PROCEDURE grdTasks.Column4.Check1.Valid
		Thisform.UpdateProject()
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE lblProject.Refresh
		This.Caption = iif(empty(Thisform.oEngine.cProjectFile), '', ;
			'Project: ' + strtran(Thisform.oEngine.cProjectFile, '.dbf', '', -1, -1, 1))
		
	ENDPROC

	PROCEDURE txtName.InteractiveChange
		dodefault()
		Thisform.cmdSave.Refresh()
		
	ENDPROC

ENDDEFINE

DEFINE CLASS deployfoxsettings AS vfpxbaseform OF "..\packages\vfpxframework\vfpxbaselibrary.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="shpCert" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCert" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblCertPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtCertPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oCertPath" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblIncrement" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSignCommand" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="spnIncrement" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtSignCommand" UniqueID="" Timestamp="" />

	*<PropValue>
		BindControls = .F.
		Caption = "DeployFox Settings"
		DataSession = 2
		DoCreate = .T.
		Height = 249
		Icon = options.ico
		MinHeight = 249
		MinWidth = 300
		Name = "deployfoxsettings"
		Width = 382
		WindowType = 1
	*</PropValue>

	ADD OBJECT 'cmdCancel' AS vfpxbasecommandbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		Left = 191, ;
		Name = "cmdCancel", ;
		TabIndex = 10, ;
		Top = 215
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS vfpxbasecommandbutton WITH ;
		Caption = "Save", ;
		Left = 106, ;
		Name = "cmdSave", ;
		TabIndex = 9, ;
		Top = 215
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtSignCommand' AS vfpxbaseeditbox WITH ;
		ControlSource = "Thisform.SignCommand", ;
		Height = 53, ;
		Left = 110, ;
		Name = "edtSignCommand", ;
		TabIndex = 3, ;
		ToolTipText = "The command to sign an EXE; stored in $SignCommand", ;
		Top = 34, ;
		Width = 255
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'lblCert' AS vfpxbaselabel WITH ;
		BackStyle = 1, ;
		Caption = " Digital Signing ", ;
		Left = 20, ;
		Name = "lblCert", ;
		Style = 3, ;
		TabIndex = 1, ;
		Top = 10, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblCertPassword' AS vfpxbaselabel WITH ;
		Caption = "Password", ;
		Left = 20, ;
		Name = "lblCertPassword", ;
		TabIndex = 5, ;
		ToolTipText = "The password for the PFX file; stored in $CertPassword", ;
		Top = 122, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblIncrement' AS vfpxbaselabel WITH ;
		Caption = "Task increment", ;
		Left = 10, ;
		Name = "lblIncrement", ;
		TabIndex = 7, ;
		Top = 173, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSignCommand' AS vfpxbaselabel WITH ;
		Caption = "Sign command", ;
		Left = 20, ;
		Name = "lblSignCommand", ;
		TabIndex = 2, ;
		ToolTipText = "The command to sign an EXE; stored in $SignCommand", ;
		Top = 35, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'oCertPath' AS vfpxfile WITH ;
		ccontrolsource = Thisform.CertPath, ;
		Left = 20, ;
		Name = "oCertPath", ;
		TabIndex = 4, ;
		ToolTipText = "The location of the PFX file to use; stored in $CertPath", ;
		Top = 91, ;
		ZOrderSet = 4, ;
		lblFile.Caption = "PFX file", ;
		lblFile.Name = "lblFile", ;
		txtFile.Height = 23, ;
		txtFile.Left = 90, ;
		txtFile.Name = "txtFile", ;
		txtFile.Top = 0, ;
		txtFile.Width = 230, ;
		cmdGetFile.Left = 320, ;
		cmdGetFile.Name = "cmdGetFile"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxfilectrls.vcx" BaseClass="container" />

	ADD OBJECT 'shpCert' AS vfpxbaseshape WITH ;
		Anchor = 15, ;
		Height = 142, ;
		Left = 10, ;
		Name = "shpCert", ;
		Top = 18, ;
		Width = 365, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="shape" />

	ADD OBJECT 'spnIncrement' AS vfpxbasespinner WITH ;
		ControlSource = "Thisform.TaskIncrement", ;
		KeyboardHighValue = 100, ;
		KeyboardLowValue = 1, ;
		Left = 95, ;
		Name = "spnIncrement", ;
		SpinnerHighValue = 100.00, ;
		SpinnerLowValue =   1.00, ;
		TabIndex = 8, ;
		Top = 169
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="spinner" />

	ADD OBJECT 'txtCertPassword' AS vfpxbasetextbox WITH ;
		ControlSource = "Thisform.CertPassword", ;
		Height = 23, ;
		Left = 110, ;
		Name = "txtCertPassword", ;
		PasswordChar = "*", ;
		TabIndex = 6, ;
		ToolTipText = "The password for the PFX file; stored in $CertPassword", ;
		Top = 117, ;
		Width = 255, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		lparameters toEngine
		local loDecrypt, ;
			lcKey, ;
			lcProperty, ;
			lcValue
		loDecrypt = newobject('foxCryptoNG', 'foxCryptoNG.prg')
		lcKey     = GetKey()
		use (toEngine.cAppPath + 'DeployFoxSettings') again shared
		scan
			lcProperty = trim(Setting)
			lcValue    = Value
			if Encrypt and left(lcValue, 2) = '0x'
				lcValue = trim(loDecrypt.Decrypt_AES(strconv(substr(lcValue, 3), 16), lcKey))
			endif Encrypt ...
			do case
				case Type = 'I'
					luValue = int(val(lcValue))
				case Type = 'N'
					luValue = val(lcValue)
				otherwise
					luValue = lcValue
			endcase
			This.AddProperty(lcProperty, luValue)
		endscan
		This.BindControls = .T.
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		Thisform.Release()
		
	ENDPROC

	PROCEDURE cmdSave.Click
		local loDecrypt, ;
			lcKey, ;
			lcProperty, ;
			luValue, ;
			lcValue
		loDecrypt = newobject('foxCryptoNG', 'foxCryptoNG.prg')
		lcKey     = GetKey()
		scan
			lcProperty = trim(Setting)
			luValue    = evaluate('Thisform.' + lcProperty)
			if Type = 'C'
				lcValue = luValue
			else
				lcValue = transform(luValue)
			endif Type = 'C'
			if Encrypt
				lcValue = '0x' + strconv(loDecrypt.Encrypt_AES(lcValue, lcKey), 15)
			endif Encrypt
			replace Value with lcValue
		endscan
		use
		Thisform.Release()
		
	ENDPROC

ENDDEFINE
