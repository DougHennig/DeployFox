*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.20" SourceFile="deployfoxui.vcx" CPID="1252" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS deployfoxform AS vfpxpersistentform OF "..\packages\vfpxframework\vfpxpersistentform.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="grdTasks" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column1.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column1.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column2.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column2.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column3.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column3.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column4.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column4.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column4.Check1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column5.Header1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="grdTasks.Column5.Text1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblTaskType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboTaskType" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkActive" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="edtComments" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="shpSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblSettings" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdUp" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDown" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNewTask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDeleteTask" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblProject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdSave" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNewProject" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOptions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdDebug" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOpenProject" UniqueID="" Timestamp="" />

	#INCLUDE "deployfox.h"
	*<DefinedPropArrayMethod>
		*m: displaytask		&& Displays the settings for the selected task
		*m: openproject		&& Opens the specified project
		*m: setupgrid		&& Sets up the grid
		*m: updateproject		&& Updates the selected record in the project
		*m: updaterun		&& Updates the status of running the project
		*p: ctasktype		&& The selected task type
		*p: oengine		&& A reference to a DeployFoxEngine
		*p: otask		&& A reference to a Task object for the selected task
	*</DefinedPropArrayMethod>

	*<PropValue>
		BindControls = .F.
		Caption = "DeployFox"
		ctasktype = 
		DataSession = 2
		DoCreate = .T.
		Height = 455
		Icon = deployfox.ico
		MinHeight = 435
		MinWidth = 1070
		Name = "deployfoxform"
		oengine = .NULL.
		otask = .NULL.
		Width = 1070
		_memberdata = <VFPData>
			<memberdata name="displaytask" display="DisplayTask"/>
			<memberdata name="ctasktype" display="cTaskType"/>
			<memberdata name="otask" display="oTask"/>
			<memberdata name="setupgrid" display="SetupGrid"/>
			<memberdata name="updaterun" display="UpdateRun"/>
			<memberdata name="oengine" display="oEngine"/>
			<memberdata name="updateproject" display="UpdateProject"/>
			<memberdata name="openproject" display="OpenProject"/>
		</VFPData>
		oPersist.Name = "oPersist"
	*</PropValue>

	ADD OBJECT 'cboTaskType' AS vfpxbasecombobox WITH ;
		BoundColumn = 2, ;
		ControlSource = "curProject.Task", ;
		Height = 24, ;
		Left = 760, ;
		lrequeryoninit = .F., ;
		Name = "cboTaskType", ;
		TabIndex = 10, ;
		Top = 45, ;
		Width = 209
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="combobox" />

	ADD OBJECT 'chkActive' AS vfpxbasecheckbox WITH ;
		Alignment = 0, ;
		Caption = "Active", ;
		ControlSource = "curProject.Active", ;
		Left = 696, ;
		Name = "chkActive", ;
		TabIndex = 14, ;
		Top = 105
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdDebug' AS vfpxbasetoolbarbutton WITH ;
		Left = 125, ;
		Name = "cmdDebug", ;
		Picture = last.bmp, ;
		TabIndex = 3, ;
		ToolTipText = "Debug", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDeleteTask' AS vfpxbasetoolbarbutton WITH ;
		Left = 200, ;
		Name = "cmdDeleteTask", ;
		Picture = removetask.bmp, ;
		TabIndex = 5, ;
		ToolTipText = "Remove the selected task", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdDown' AS vfpxbasetoolbarbutton WITH ;
		Left = 250, ;
		Name = "cmdDown", ;
		Picture = down.bmp, ;
		TabIndex = 7, ;
		ToolTipText = "Move the task down", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNewProject' AS vfpxbasetoolbarbutton WITH ;
		Left = 50, ;
		Name = "cmdNewProject", ;
		Picture = newproject.bmp, ;
		TabIndex = 2, ;
		ToolTipText = "Create a new DeployFox project", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdNewTask' AS vfpxbasetoolbarbutton WITH ;
		Left = 175, ;
		Name = "cmdNewTask", ;
		Picture = newtask.bmp, ;
		TabIndex = 4, ;
		ToolTipText = "Add a task", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOpenProject' AS vfpxdropdownmenubutton WITH ;
		Left = 10, ;
		Name = "cmdOpenProject", ;
		ToolTipText = "Open a DeployFox project", ;
		Top = 10, ;
		cmdMain.Name = "cmdMain", ;
		cmdMain.Picture = openproject.bmp, ;
		cmdMenu.Name = "cmdMenu"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxdropdownmenubutton.vcx" BaseClass="container" />

	ADD OBJECT 'cmdOptions' AS vfpxbasetoolbarbutton WITH ;
		Left = 300, ;
		Name = "cmdOptions", ;
		Picture = options.bmp, ;
		TabIndex = 8, ;
		ToolTipText = "Options", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRun' AS vfpxbasetoolbarbutton WITH ;
		Left = 100, ;
		Name = "cmdRun", ;
		Picture = next.bmp, ;
		TabIndex = 3, ;
		ToolTipText = "Run", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdSave' AS vfpxbasetoolbarbutton WITH ;
		Left = 1038, ;
		Name = "cmdSave", ;
		Picture = save.bmp, ;
		TabIndex = 17, ;
		ToolTipText = "Save the settings", ;
		Top = 45
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdUp' AS vfpxbasetoolbarbutton WITH ;
		Left = 225, ;
		Name = "cmdUp", ;
		Picture = up.bmp, ;
		TabIndex = 6, ;
		ToolTipText = "Move the task up", ;
		Top = 10
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtComments' AS vfpxbaseeditbox WITH ;
		Anchor = 10, ;
		ControlSource = "curProject.Comments", ;
		Height = 114, ;
		Left = 760, ;
		Name = "edtComments", ;
		TabIndex = 16, ;
		Top = 131, ;
		Width = 300
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="editbox" />

	ADD OBJECT 'grdTasks' AS vfpxbasegrid WITH ;
		Anchor = 5, ;
		ColumnCount = 5, ;
		Height = 381, ;
		HighlightStyle = 2, ;
		Left = 10, ;
		Name = "grdTasks", ;
		Panel = 1, ;
		ScrollBars = 2, ;
		TabIndex = 9, ;
		Top = 45, ;
		Width = 678, ;
		Column1.ControlSource = "curProject.Order", ;
		Column1.FontName = "Segoe UI", ;
		Column1.Name = "Column1", ;
		Column1.Width = 50, ;
		Column2.ControlSource = "curProject.Name", ;
		Column2.FontName = "Segoe UI", ;
		Column2.Name = "Column2", ;
		Column2.Width = 337, ;
		Column3.ControlSource = "curProject.Task", ;
		Column3.FontName = "Segoe UI", ;
		Column3.Name = "Column3", ;
		Column3.Width = 146, ;
		Column4.ControlSource = "curProject.Active", ;
		Column4.CurrentControl = "Check1", ;
		Column4.FontName = "Segoe UI", ;
		Column4.Name = "Column4", ;
		Column4.Sparse = .F., ;
		Column4.Width = 45, ;
		Column5.ControlSource = "curProject.Status", ;
		Column5.FontName = "Segoe UI", ;
		Column5.Name = "Column5"
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="grid" />

	ADD OBJECT 'grdTasks.Column1.Header1' AS header WITH ;
		Caption = "Order", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column1.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column2.Header1' AS header WITH ;
		Caption = "Task", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column2.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column3.Header1' AS header WITH ;
		Caption = "Type", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column3.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column4.Check1' AS checkbox WITH ;
		Alignment = 0, ;
		Caption = "", ;
		Centered = .T., ;
		Height = 10, ;
		Left = 43, ;
		Name = "Check1", ;
		Top = 19, ;
		Value = .F., ;
		Width = 10
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'grdTasks.Column4.Header1' AS header WITH ;
		Alignment = 2, ;
		Caption = "Active", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column4.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'grdTasks.Column5.Header1' AS header WITH ;
		Caption = "Status", ;
		FontName = "Segoe UI", ;
		Name = "Header1"
		*< END OBJECT: BaseClass="header" />

	ADD OBJECT 'grdTasks.Column5.Text1' AS textbox WITH ;
		BackColor = 255,255,255, ;
		BorderStyle = 0, ;
		FontName = "Segoe UI", ;
		ForeColor = 0,0,0, ;
		Margin = 0, ;
		Name = "Text1"
		*< END OBJECT: BaseClass="textbox" />

	ADD OBJECT 'lblComments' AS vfpxbaselabel WITH ;
		Caption = "Comments", ;
		Left = 696, ;
		Name = "lblComments", ;
		TabIndex = 15, ;
		Top = 131
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblName' AS vfpxbaselabel WITH ;
		Caption = "Name", ;
		Left = 696, ;
		Name = "lblName", ;
		TabIndex = 13, ;
		Top = 78
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblProject' AS vfpxbaselabel WITH ;
		Anchor = 4, ;
		Caption = "Project", ;
		Left = 10, ;
		Name = "lblProject", ;
		TabIndex = 19, ;
		Top = 432
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblSettings' AS vfpxbaselabel WITH ;
		BackStyle = 1, ;
		Caption = " Settings ", ;
		Left = 706, ;
		Name = "lblSettings", ;
		Style = 3, ;
		TabIndex = 18, ;
		Top = 248
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'lblTaskType' AS vfpxbaselabel WITH ;
		Caption = "Task type", ;
		Left = 696, ;
		Name = "lblTaskType", ;
		TabIndex = 11, ;
		Top = 49
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="label" />

	ADD OBJECT 'shpSettings' AS vfpxbaseshape WITH ;
		Anchor = 15, ;
		Height = 171, ;
		Left = 696, ;
		Name = "shpSettings", ;
		Top = 256, ;
		Width = 365
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="shape" />

	ADD OBJECT 'txtName' AS vfpxbasetextbox WITH ;
		Anchor = 10, ;
		ControlSource = "curProject.Name", ;
		Height = 23, ;
		Left = 760, ;
		Name = "txtName", ;
		TabIndex = 12, ;
		Top = 75, ;
		Width = 300
		*< END OBJECT: ClassLib="..\packages\vfpxframework\vfpxbaselibrary.vcx" BaseClass="textbox" />
	
	PROCEDURE displaytask		&& Displays the settings for the selected task
		lparameters tlNew
		local lcControl, ;
			lcFile, ;
			lcUIFile
		select curProject
		This.cTaskType = lower(trim(Task))
		if not empty(This.cTaskType)
			select curTaskTypes
			locate for lower(Type) = This.cTaskType
			lcFile   = trim(File)
			lcUIFile = trim(UIFile)
			select curProject
			lcControl = 'This.' + This.cTaskType
			if type(lcControl) <> 'O'
				This.NewObject(This.cTaskType, This.cTaskType + 'UI', lcUIFile, '', ;
					This.cTaskType, lcFile, This.oEngine.oVariables)
				with &lcControl
					.lSaveAnchor = .T.
					.Left        = This.shpSettings.Left + 10
					.Top         = This.shpSettings.Top  + 10
					.lSaveAnchor = .F.
					.Visible     = .T.
				endwith
			endif type(lcControl) <> 'O'
		*** TODO: doesn't resize controls if not visible
			with &lcControl
				if tlNew
					.oTask = newobject(This.cTaskType, lcFile, '', This.oEngine.oVariables)
				else
					.oTask.GetSettings(Settings, .T.)
				endif tlNew
			endwith
		endif not empty(This.cTaskType)
		This.Refresh()
		
	ENDPROC

	PROCEDURE Init
		This.cRegistryKey = ccREGISTRY_KEY
		dodefault()
		
		This.oEngine = newobject('DeployFoxEngine', 'DeployFoxEngine.prg')
		
		* Create a cursor for data binding.
		
		create cursor curProject (ID C(1), Order I, Task C(1), Name C(1), Active L, ;
			Settings M, Comments M, Status C(1))
		
		* Set up cboTaskType.
		
		select Descrip, Type ;
			from curTaskTypes ;
			order by Descrip ;
			into array This.cboTaskType.aItems
		This.cboTaskType.Requery()
		
		* Set up the grid
		
		This.grdTasks.RecordSource = 'curProject'
		This.SetupGrid()
		This.BindControls = .T.
		
	ENDPROC

	PROCEDURE openproject		&& Opens the specified project
		lparameters tcProject
		This.grdTasks.RecordSource = ''
		This.oEngine.OpenProject(tcProject)
		This.grdTasks.RecordSource = 'curProject'
		This.SetupGrid()
		This.DisplayTask()
		
	ENDPROC

	PROCEDURE setupgrid		&& Sets up the grid
		with This.grdTasks
			.Column1.ControlSource    = 'curProject.Order'
			.Column2.ControlSource    = 'curProject.Name'
			.Column3.ControlSource    = 'curProject.Task'
			.Column4.ControlSource    = 'curProject.Active'
			.Column5.ControlSource    = 'curProject.Status'
			.Column5.DynamicBackColor = "icase(Status = 'Failed', rgb(255, 0, 0), " + ;
				"Status = 'Success', rgb(0, 255, 0), " + ;
				"rgb(255, 255, 255))"
			.Column5.DynamicForeColor = "iif(Status = 'Failed', rgb(255, 255, 255), rgb(0, 0, 0))"
		endwith
		
	ENDPROC

	PROCEDURE updateproject		&& Updates the selected record in the project
		local llNew, ;
			lcID, ;
			loRecord
		select curProject
		llNew = empty(ID)
		if llNew
			lcID = sys(2015)
			replace ID with lcID
			append blank in ProjectFile
			replace ID with lcID in ProjectFile
		endif llNew
		scatter name loRecord memo
		select ProjectFile
		locate for ID = loRecord.ID
		gather name loRecord memo
		select curProject
		
	ENDPROC

	PROCEDURE updaterun		&& Updates the status of running the project
		lparameters tcID, ;
			tcStatus, ;
			tcMessage
		local lnSelect
		lnSelect = select()
		select curProject
		locate for ID = tcID
		replace Status with tcStatus
		select (lnSelect)
		This.grdTasks.Refresh()
		if not empty(tcMessage)
			messagebox(tcMessage, 16, 'DeployFox')
		endif not empty(tcMessage)
		
	ENDPROC

	PROCEDURE cboTaskType.InteractiveChange
		dodefault()
		Thisform.DisplayTask(.T.)
		
	ENDPROC

	PROCEDURE cboTaskType.Refresh
		* This is only enabled for a new record.
		
		This.Enabled = empty(ID)
		
	ENDPROC

	PROCEDURE cmdDebug.Click
		local lnRecno, ;
			llReturn, ;
			llLast
		select curProject
		lnRecno = recno()
		scan
			replace Status with ''
		endscan
		Thisform.grdTasks.Refresh()
		
		* Set all the variables.
		
		bindevent(Thisform.oEngine, 'Update', Thisform, 'UpdateRun')
		llReturn = Thisform.oEngine.SetVariables()
		
		* Run the tasks from the selected one to the end.
		
		go lnRecno
		if llReturn
			scan rest for Task <> 'SetVariable'
				llReturn = Thisform.oEngine.RunTask(ID, Name, Task, Settings, .T.)
				skip
				llLast = eof()
				skip -1
				do case
					case not llReturn
						exit
					case not llLast and messagebox('Click OK to run the next task or Cancel to stop.', ;
						MB_OKCANCEL + MB_ICONINFORMATION, 'DeployFox') = IDCANCEL
					exit
				endcase
			endscan rest ...
		endif llReturn
		unbindevent(Thisform.oEngine)
		if messagebox('Run complete. Would you like to view the log file?', ;
			MB_YESNO + MB_ICONINFORMATION, 'DeployFox') = IDYES
			OpenFile(Thisform.oEngine.cLogFile)
		endif messagebox ...
		go lnRecno
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdDebug.Refresh
		select count(*) as Cnt ;
			from curProject ;
			into cursor curTasks
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and curTasks.Cnt > 0
		use in curTasks
		select curProject
		
	ENDPROC

	PROCEDURE cmdDeleteTask.Click
		if messagebox('Delete this task?', MB_YESNO + MB_ICONQUESTION, 'DeployFox') = IDYES
			delete in curProject
		*** TODO: renumber all tasks? If so, must update all records in ProjectFile too
			select ProjectFile
			locate for ID = loRecord.ID
			delete
			select curProject
			Thisform.Refresh()
		endif messagebox...
		
	ENDPROC

	PROCEDURE cmdDeleteTask.Refresh
		This.Enabled = not empty(curProject.Task)
		
	ENDPROC

	PROCEDURE cmdDown.Click
		local lcID, ;
			lnNewOrder, ;
			lnCurrOrder
		select curProject
		skip
		lcID       = ID
		lnNewOrder = Order
		skip -1
		lnCurrOrder = Order
		replace Order with lnNewOrder
		Thisform.UpdateProject()
		locate for ID = lcID
		replace Order with lnCurrOrder
		Thisform.UpdateProject()
		locate for Order = lnNewOrder
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdDown.Refresh
		select max(Order) as Order ;
			from curProject ;
			into cursor curMaxOrder
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and ;
			curProject.Order < nvl(curMaxOrder.Order, 0)
		use in curMaxOrder
		select curProject
		
	ENDPROC

	PROCEDURE cmdNewProject.Click
		lcProject = putfile('', '', 'DBF')
		if not empty(lcProject)
			lcProject = GetProperFileCase(lcProject)
			Thisform.oEngine.NewProject(lcProject)
			This.Refresh()
		endif not empty(lcProject)
		
	ENDPROC

	PROCEDURE cmdNewTask.Click
		select curProject
		calculate max(Order) to lnOrder
		append blank
		replace Order with lnOrder + 1, ;
			Task with 'SetVariable'
		Thisform.DisplayTask(.T.)
		
	ENDPROC

	PROCEDURE cmdNewTask.Refresh
		This.Enabled = not empty(Thisform.oEngine.cProjectFile)
		
	ENDPROC

	PROCEDURE cmdOpenProject.buttonclicked
		local lcProject
		lcProject = getfile('DBF', 'Project', '', 0, 'Select DeployFox Project')
		if not empty(lcProject)
			lcProject = GetProperFileCase(lcProject)
			Thisform.OpenProject(lcProject)
		endif not empty(lcProject)
		
	ENDPROC

	PROCEDURE cmdOpenProject.shortcutmenu
		lparameters toMenu,	;
			tcObject
		local lcProject, ;
			lcCommand
		for each lcProject in Thisform.oEngine.oRecentProjects foxobject
			lcCommand = '_screen.ActiveForm.OpenProject([' + lcProject + '])'
			toMenu.AddBar(lcProject, lcCommand)
		next loProject
		dodefault(toMenu, tcObject)
		
	ENDPROC

	PROCEDURE cmdOptions.Click
		*** TODO
		
	ENDPROC

	PROCEDURE cmdRun.Click
		select curProject
		replace all Status with ''
		go top
		Thisform.grdTasks.Refresh()
		bindevent(Thisform.oEngine, 'Update', Thisform, 'UpdateRun')
		Thisform.oEngine.Run()
		unbindevent(Thisform.oEngine)
		if messagebox('Run complete. Would you like to view the log file?', ;
			MB_YESNO + MB_ICONINFORMATION, 'DeployFox') = IDYES
			OpenFile(Thisform.oEngine.cLogFile)
		endif messagebox ...
		
	ENDPROC

	PROCEDURE cmdRun.Refresh
		select count(*) as Cnt ;
			from curProject ;
			into cursor curTasks
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and curTasks.Cnt > 0
		use in curTasks
		select curProject
		
	ENDPROC

	PROCEDURE cmdSave.Click
		local lcControl, ;
			lcSettings
		if empty(curProject.Name)
			messagebox('Please enter the name of the task.', MB_ICONEXCLAMATION, ;
				'DeployFox')
			return
		endif empty(curProject.Name)
		lcControl = 'Thisform.' + Thisform.cTaskType
		if &lcControl..Validate()
			&lcControl..SaveSettings()
			lcSettings = evaluate(lcControl + '.oTask.SaveSettings()')
			replace Settings with lcSettings in curProject
			Thisform.UpdateProject()
		else
			messagebox('The settings for this task are incomplete.', MB_ICONINFORMATION, 'DeployFox')
		endif &lcControl..Validate()
		
	ENDPROC

	PROCEDURE cmdSave.Refresh
		This.Enabled = not empty(curProject.Name)
		
	ENDPROC

	PROCEDURE cmdUp.Click
		local lcID, ;
			lnNewOrder, ;
			lnCurrOrder
		select curProject
		skip -1
		lcID       = ID
		lnNewOrder = Order
		skip
		lnCurrOrder = Order
		replace Order with lnNewOrder
		Thisform.UpdateProject()
		locate for ID = lcID
		replace Order with lnCurrOrder
		Thisform.UpdateProject()
		locate for Order = lnNewOrder
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE cmdUp.Refresh
		This.Enabled = not empty(Thisform.oEngine.cProjectFile) and ;
			curProject.Order > 1
		
	ENDPROC

	PROCEDURE grdTasks.AfterRowColChange
		lparameters tnColIndex
		Thisform.DisplayTask()
		
	ENDPROC

	PROCEDURE grdTasks.Column4.Check1.Valid
		Thisform.UpdateProject()
		Thisform.Refresh()
		
	ENDPROC

	PROCEDURE lblProject.Refresh
		This.Caption = iif(empty(Thisform.oEngine.cProjectFile), '', ;
			'Project: ' + strtran(Thisform.oEngine.cProjectFile, '.dbf', '', -1, -1, 1))
		
	ENDPROC

	PROCEDURE txtName.InteractiveChange
		dodefault()
		Thisform.cmdSave.Refresh()
		
	ENDPROC

ENDDEFINE
